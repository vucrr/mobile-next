{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nimport { EXCHANGE_PRIVILEGE, FETCH_PRIVILEGE_LIST, FETCH_USER_PRIVILEGE_LIST } from 'constant/index';\nimport { PrivilegeTypes } from 'containers/Account/Privilege/UserPrivilegeItem';\nimport { fromJS } from 'immutable';\nimport { handleActions } from 'redux-actions';\nvar initialPrivilege = {\n  list: [],\n  userList: []\n};\nvar privilege = handleActions((_handleActions = {}, _defineProperty(_handleActions, FETCH_PRIVILEGE_LIST, function (state, _ref) {\n  var payload = _ref.payload;\n  return state.set('list', fromJS(payload));\n}), _defineProperty(_handleActions, FETCH_USER_PRIVILEGE_LIST, function (state, _ref2) {\n  var payload = _ref2.payload;\n  return state.set('userList', fromJS(payload));\n}), _defineProperty(_handleActions, EXCHANGE_PRIVILEGE, function (state, _ref3) {\n  var payload = _ref3.payload;\n  var item = state.getIn(['userList', payload.index]);\n  var newItem = item.set('redeem_code', payload.data.redeem_code).set('type', PrivilegeTypes.Exchanged);\n  return state.setIn(['userList', payload.index], newItem);\n}), _handleActions), fromJS(initialPrivilege));\nexport default privilege;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/reducers/account/privilege.ts"],"names":["EXCHANGE_PRIVILEGE","FETCH_PRIVILEGE_LIST","FETCH_USER_PRIVILEGE_LIST","PrivilegeTypes","fromJS","handleActions","initialPrivilege","list","userList","privilege","state","payload","set","item","getIn","index","newItem","data","redeem_code","Exchanged","setIn"],"mappings":";;;;AAAA,SAASA,kBAAT,EAA6BC,oBAA7B,EAAmDC,yBAAnD,QAAoF,gBAApF;AACA,SAASC,cAAT,QAA+B,gDAA/B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,aAAT,QAA8B,eAA9B;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,IAAI,EAAE,EADiB;AAEvBC,EAAAA,QAAQ,EAAE;AAFa,CAAzB;AAKA,IAAMC,SAAS,GAAGJ,aAAa,uDAE1BJ,oBAF0B,EAEH,UAACS,KAAD;AAAA,MAAUC,OAAV,QAAUA,OAAV;AAAA,SAAwBD,KAAK,CAACE,GAAN,CAAU,MAAV,EAAkBR,MAAM,CAACO,OAAD,CAAxB,CAAxB;AAAA,CAFG,mCAG1BT,yBAH0B,EAGE,UAACQ,KAAD;AAAA,MAAUC,OAAV,SAAUA,OAAV;AAAA,SAAwBD,KAAK,CAACE,GAAN,CAAU,UAAV,EAAsBR,MAAM,CAACO,OAAD,CAA5B,CAAxB;AAAA,CAHF,mCAI1BX,kBAJ0B,EAIL,UAACU,KAAD,SAAwB;AAAA,MAAdC,OAAc,SAAdA,OAAc;AAC5C,MAAME,IAAI,GAAGH,KAAK,CAACI,KAAN,CAAY,CAAC,UAAD,EAAaH,OAAO,CAACI,KAArB,CAAZ,CAAb;AACA,MAAMC,OAAO,GAAGH,IAAI,CAACD,GAAL,CAAS,aAAT,EAAwBD,OAAO,CAACM,IAAR,CAAaC,WAArC,EAAkDN,GAAlD,CAAsD,MAAtD,EAA8DT,cAAc,CAACgB,SAA7E,CAAhB;AACA,SAAOT,KAAK,CAACU,KAAN,CAAY,CAAC,UAAD,EAAaT,OAAO,CAACI,KAArB,CAAZ,EAAyCC,OAAzC,CAAP;AACD,CAR0B,oBAU7BZ,MAAM,CAACE,gBAAD,CAVuB,CAA/B;AAaA,eAAeG,SAAf","sourcesContent":["import { EXCHANGE_PRIVILEGE, FETCH_PRIVILEGE_LIST, FETCH_USER_PRIVILEGE_LIST } from 'constant/index'\nimport { PrivilegeTypes } from 'containers/Account/Privilege/UserPrivilegeItem'\nimport { fromJS } from 'immutable'\nimport { handleActions } from 'redux-actions'\n\nconst initialPrivilege = {\n  list: [],\n  userList: [],\n}\n\nconst privilege = handleActions(\n  {\n    [FETCH_PRIVILEGE_LIST]: (state, { payload }) => state.set('list', fromJS(payload)),\n    [FETCH_USER_PRIVILEGE_LIST]: (state, { payload }) => state.set('userList', fromJS(payload)),\n    [EXCHANGE_PRIVILEGE]: (state, { payload }) => {\n      const item = state.getIn(['userList', payload.index])\n      const newItem = item.set('redeem_code', payload.data.redeem_code).set('type', PrivilegeTypes.Exchanged)\n      return state.setIn(['userList', payload.index], newItem)\n    },\n  },\n  fromJS(initialPrivilege),\n)\n\nexport default privilege\n"]},"metadata":{},"sourceType":"module"}