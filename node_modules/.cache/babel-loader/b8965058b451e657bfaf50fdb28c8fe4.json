{"ast":null,"code":"import _Button from \"antd-mobile/lib/button\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport classnames from 'classnames';\nimport React from 'react';\nimport styles from \"./Button.less\";\n\nvar MyButton = function MyButton(props) {\n  var className = props.className,\n      children = props.children,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$safeArea = props.safeArea,\n      safeArea = _props$safeArea === void 0 ? false : _props$safeArea,\n      rest = _objectWithoutProperties(props, [\"className\", \"children\", \"fixed\", \"safeArea\"]);\n\n  var cx = classnames(styles.btn, fixed && styles.fixed, safeArea && styles.safe_area, className);\n  return React.createElement(_Button, _extends({}, rest, {\n    className: cx\n  }), children);\n};\n\nexport default MyButton;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/components/Button/Button.tsx"],"names":["classnames","React","styles","MyButton","props","className","children","fixed","safeArea","rest","cx","btn","safe_area"],"mappings":";;;AAEA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;;AAQA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAA0B;AAAA,MACjCC,SADiC,GACiCD,KADjC,CACjCC,SADiC;AAAA,MACtBC,QADsB,GACiCF,KADjC,CACtBE,QADsB;AAAA,qBACiCF,KADjC,CACZG,KADY;AAAA,MACZA,KADY,6BACJ,KADI;AAAA,wBACiCH,KADjC,CACGI,QADH;AAAA,MACGA,QADH,gCACc,KADd;AAAA,MACwBC,IADxB,4BACiCL,KADjC;;AAEzC,MAAMM,EAAE,GAAGV,UAAU,CAACE,MAAM,CAACS,GAAR,EAAaJ,KAAK,IAAIL,MAAM,CAACK,KAA7B,EAAoCC,QAAQ,IAAIN,MAAM,CAACU,SAAvD,EAAkEP,SAAlE,CAArB;AACA,SACE,0CAAYI,IAAZ;AAAkB,IAAA,SAAS,EAAEC;AAA7B,MACGJ,QADH,CADF;AAKD,CARD;;AAUA,eAAeH,QAAf","sourcesContent":["import { Button } from 'antd-mobile'\nimport { ButtonProps } from 'antd-mobile/es/button'\nimport classnames from 'classnames'\nimport React from 'react'\nimport styles from './Button.less'\n\ninterface MyButtonProps extends ButtonProps {\n  children: any\n  fixed?: boolean\n  safeArea?: boolean\n}\n\nconst MyButton = (props: MyButtonProps) => {\n  const { className, children, fixed = false, safeArea = false, ...rest } = props\n  const cx = classnames(styles.btn, fixed && styles.fixed, safeArea && styles.safe_area, className)\n  return (\n    <Button {...rest} className={cx}>\n      {children}\n    </Button>\n  )\n}\n\nexport default MyButton\n"]},"metadata":{},"sourceType":"module"}