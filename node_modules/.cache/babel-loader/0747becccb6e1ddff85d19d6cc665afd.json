{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nimport { CLOSE_PRODUCT_COMMENT_MODAL, FETCH_PRODUCT_COMMENTS, LOAD_MORE_PRODUCT_COMMENTS, OPEN_PRODUCT_COMMENT_MODAL } from 'constant/index';\nimport { fromJS } from 'immutable';\nimport { handleActions } from 'redux-actions';\nvar initialComments = {\n  showModal: false,\n  modalData: {},\n  list: [],\n  total: 0,\n  imageCount: 0\n};\nvar comments = handleActions((_handleActions = {}, _defineProperty(_handleActions, OPEN_PRODUCT_COMMENT_MODAL, function (state, _ref) {\n  var payload = _ref.payload;\n  return state.set('showModal', true).set('modalData', fromJS(payload.data)).set('index', payload.index);\n}), _defineProperty(_handleActions, CLOSE_PRODUCT_COMMENT_MODAL, function (state) {\n  return state.set('showModal', false).set('modalData', null).set('index', 0);\n}), _defineProperty(_handleActions, FETCH_PRODUCT_COMMENTS, function (state, _ref2) {\n  var payload = _ref2.payload;\n  var _payload$data = payload.data,\n      total = _payload$data.total,\n      list = _payload$data.list,\n      have_img_count = _payload$data.have_img_count,\n      query = payload.query;\n  return state.set('list', fromJS(list)).set('total', total).set('imageCount', have_img_count).set('query', fromJS(query));\n}), _defineProperty(_handleActions, LOAD_MORE_PRODUCT_COMMENTS, function (state, _ref3) {\n  var payload = _ref3.payload;\n  var _payload$data2 = payload.data,\n      total = _payload$data2.total,\n      list = _payload$data2.list,\n      have_img_count = _payload$data2.have_img_count,\n      query = payload.query;\n  var newList = state.get('list').concat(fromJS(list));\n  return state.set('list', newList).set('total', total).set('imageCount', have_img_count).set('query', fromJS(query));\n}), _handleActions), fromJS(initialComments));\nexport default comments;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/reducers/product/comments.ts"],"names":["CLOSE_PRODUCT_COMMENT_MODAL","FETCH_PRODUCT_COMMENTS","LOAD_MORE_PRODUCT_COMMENTS","OPEN_PRODUCT_COMMENT_MODAL","fromJS","handleActions","initialComments","showModal","modalData","list","total","imageCount","comments","state","payload","set","data","index","have_img_count","query","newList","get","concat"],"mappings":";;;;AAAA,SACEA,2BADF,EAEEC,sBAFF,EAGEC,0BAHF,EAIEC,0BAJF,QAKO,gBALP;AAMA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,aAAT,QAA8B,eAA9B;AAEA,IAAMC,eAAe,GAAG;AACtBC,EAAAA,SAAS,EAAE,KADW;AAEtBC,EAAAA,SAAS,EAAE,EAFW;AAGtBC,EAAAA,IAAI,EAAE,EAHgB;AAItBC,EAAAA,KAAK,EAAE,CAJe;AAKtBC,EAAAA,UAAU,EAAE;AALU,CAAxB;AAOA,IAAMC,QAAQ,GAAGP,aAAa,uDAEzBF,0BAFyB,YAEGU,KAFH,QAEuB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC/C,SAAOD,KAAK,CACTE,GADI,CACA,WADA,EACa,IADb,EAEJA,GAFI,CAEA,WAFA,EAEaX,MAAM,CAACU,OAAO,CAACE,IAAT,CAFnB,EAGJD,GAHI,CAGA,OAHA,EAGSD,OAAO,CAACG,KAHjB,CAAP;AAID,CAPyB,mCAQzBjB,2BARyB,YAQIa,KARJ,EAQW;AACnC,SAAOA,KAAK,CACTE,GADI,CACA,WADA,EACa,KADb,EAEJA,GAFI,CAEA,WAFA,EAEa,IAFb,EAGJA,GAHI,CAGA,OAHA,EAGS,CAHT,CAAP;AAID,CAbyB,mCAczBd,sBAdyB,YAcDY,KAdC,SAcmB;AAAA,MAAXC,OAAW,SAAXA,OAAW;AAAA,sBAIvCA,OAJuC,CAEzCE,IAFyC;AAAA,MAEjCN,KAFiC,iBAEjCA,KAFiC;AAAA,MAE1BD,IAF0B,iBAE1BA,IAF0B;AAAA,MAEpBS,cAFoB,iBAEpBA,cAFoB;AAAA,MAGzCC,KAHyC,GAIvCL,OAJuC,CAGzCK,KAHyC;AAK3C,SAAON,KAAK,CACTE,GADI,CACA,MADA,EACQX,MAAM,CAACK,IAAD,CADd,EAEJM,GAFI,CAEA,OAFA,EAESL,KAFT,EAGJK,GAHI,CAGA,YAHA,EAGcG,cAHd,EAIJH,GAJI,CAIA,OAJA,EAISX,MAAM,CAACe,KAAD,CAJf,CAAP;AAKD,CAxByB,mCAyBzBjB,0BAzByB,YAyBGW,KAzBH,SAyBuB;AAAA,MAAXC,OAAW,SAAXA,OAAW;AAAA,uBAI3CA,OAJ2C,CAE7CE,IAF6C;AAAA,MAErCN,KAFqC,kBAErCA,KAFqC;AAAA,MAE9BD,IAF8B,kBAE9BA,IAF8B;AAAA,MAExBS,cAFwB,kBAExBA,cAFwB;AAAA,MAG7CC,KAH6C,GAI3CL,OAJ2C,CAG7CK,KAH6C;AAK/C,MAAMC,OAAO,GAAGP,KAAK,CAACQ,GAAN,CAAU,MAAV,EAAkBC,MAAlB,CAAyBlB,MAAM,CAACK,IAAD,CAA/B,CAAhB;AACA,SAAOI,KAAK,CACTE,GADI,CACA,MADA,EACQK,OADR,EAEJL,GAFI,CAEA,OAFA,EAESL,KAFT,EAGJK,GAHI,CAGA,YAHA,EAGcG,cAHd,EAIJH,GAJI,CAIA,OAJA,EAISX,MAAM,CAACe,KAAD,CAJf,CAAP;AAKD,CApCyB,oBAsC5Bf,MAAM,CAACE,eAAD,CAtCsB,CAA9B;AAyCA,eAAeM,QAAf","sourcesContent":["import {\n  CLOSE_PRODUCT_COMMENT_MODAL,\n  FETCH_PRODUCT_COMMENTS,\n  LOAD_MORE_PRODUCT_COMMENTS,\n  OPEN_PRODUCT_COMMENT_MODAL,\n} from 'constant/index'\nimport { fromJS } from 'immutable'\nimport { handleActions } from 'redux-actions'\n\nconst initialComments = {\n  showModal: false,\n  modalData: {},\n  list: [],\n  total: 0,\n  imageCount: 0,\n}\nconst comments = handleActions(\n  {\n    [OPEN_PRODUCT_COMMENT_MODAL](state, { payload }) {\n      return state\n        .set('showModal', true)\n        .set('modalData', fromJS(payload.data))\n        .set('index', payload.index)\n    },\n    [CLOSE_PRODUCT_COMMENT_MODAL](state) {\n      return state\n        .set('showModal', false)\n        .set('modalData', null)\n        .set('index', 0)\n    },\n    [FETCH_PRODUCT_COMMENTS](state, { payload }) {\n      const {\n        data: { total, list, have_img_count },\n        query,\n      } = payload\n      return state\n        .set('list', fromJS(list))\n        .set('total', total)\n        .set('imageCount', have_img_count)\n        .set('query', fromJS(query))\n    },\n    [LOAD_MORE_PRODUCT_COMMENTS](state, { payload }) {\n      const {\n        data: { total, list, have_img_count },\n        query,\n      } = payload\n      const newList = state.get('list').concat(fromJS(list))\n      return state\n        .set('list', newList)\n        .set('total', total)\n        .set('imageCount', have_img_count)\n        .set('query', fromJS(query))\n    },\n  },\n  fromJS(initialComments),\n)\n\nexport default comments\n"]},"metadata":{},"sourceType":"module"}