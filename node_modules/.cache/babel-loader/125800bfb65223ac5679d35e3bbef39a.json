{"ast":null,"code":"import _Flex from \"antd-mobile/lib/flex\";\nimport classnames from 'classnames';\nimport { Icon, LazyImage, Link } from 'components';\nimport React from 'react';\nimport withSource from \"../withSource\";\nimport styles from \"./Product.less\";\n\nvar Product = function Product(_ref) {\n  var ua = _ref.ua,\n      utm = _ref.utm,\n      item = _ref.item,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'md' : _ref$size,\n      trackEvent = _ref.trackEvent,\n      recommend = _ref.recommend;\n  var isOld = item.get('tag') === 3;\n  var showOldPrice = item.get('price') < item.get('baseFee');\n  var isApp = ua.get('isApp');\n  var isCmblife = utm.get('isCmblife');\n  var pathname = isApp ? '/product/index' : '/product/detail';\n  return React.createElement(Link, {\n    native: isApp || isCmblife,\n    className: classnames(styles.product, styles[size], recommend && styles.recommend),\n    to: {\n      pathname: pathname,\n      query: {\n        id_activity: item.get('id')\n      }\n    },\n    trackEvent: trackEvent\n  }, React.createElement(_Flex, {\n    className: styles.thumb,\n    justify: \"center\"\n  }, React.createElement(LazyImage, {\n    src: item.get('imgUrl')\n  }), !item.get('noBadge') ? React.createElement(\"span\", {\n    className: classnames(styles.badge, isOld && styles.used)\n  }, isOld ? '9成新' : '全新') : '', showOldPrice && !item.get('noBadge') && React.createElement(\"div\", {\n    className: styles.icon_box\n  }, React.createElement(Icon, {\n    className: styles.icon,\n    type: require('svg/jiangjia.svg')\n  }), React.createElement(\"span\", null, \"\\u76F4\\u964D\"))), React.createElement(\"div\", {\n    className: styles.text_box\n  }, React.createElement(\"span\", {\n    className: classnames(styles.title, size !== 'xs' && 'ellipsis')\n  }, item.get('title')), item.get('assurance') && React.createElement(\"span\", {\n    className: classnames(styles.des, 'ellipsis')\n  }, \"\\u6BD4\\u8D2D\\u4E70\\u7701\\uFFE5\", item.get('assurance'), \"\\u8D77\"), React.createElement(\"div\", {\n    className: styles.price_box\n  }, React.createElement(\"span\", {\n    className: classnames(styles.price, 'special')\n  }, \"\\xA5\", item.get('price'), React.createElement(\"span\", {\n    className: styles.unit\n  }, \"/\\u6708\\u8D77\")), showOldPrice && React.createElement(\"span\", {\n    className: styles.old_price\n  }, \"\\uFFE5\", item.get('baseFee'), React.createElement(\"span\", {\n    className: styles.unit\n  }, \"/\\u6708\\u8D77\")))));\n};\n\nexport default withSource(Product);","map":{"version":3,"sources":["/Users/viser/mobile-next/src/components/Product/Product.tsx"],"names":["classnames","Icon","LazyImage","Link","React","withSource","styles","Product","ua","utm","item","size","trackEvent","recommend","isOld","get","showOldPrice","isApp","isCmblife","pathname","product","query","id_activity","thumb","badge","used","icon_box","icon","require","text_box","title","des","price_box","price","unit","old_price"],"mappings":"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","sourcesContent":["import { Flex } from 'antd-mobile'\nimport classnames from 'classnames'\nimport { Icon, LazyImage, Link } from 'components'\nimport React from 'react'\nimport { TrackClickEventProperties } from 'utils/piwik'\nimport withSource, { SourceProps } from '../withSource'\nimport styles from './Product.less'\n\ninterface ProductProps {\n  item: any\n  size: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  trackEvent?: TrackClickEventProperties\n  recommend?: boolean\n}\n\nconst Product = ({ ua, utm, item, size = 'md', trackEvent, recommend }: ProductProps & SourceProps) => {\n  const isOld = item.get('tag') === 3\n  const showOldPrice = item.get('price') < item.get('baseFee')\n  const isApp = ua.get('isApp')\n  const isCmblife = utm.get('isCmblife')\n  const pathname = isApp ? '/product/index' : '/product/detail'\n\n  return (\n    <Link\n      native={isApp || isCmblife}\n      className={classnames(styles.product, styles[size], recommend && styles.recommend)}\n      to={{ pathname, query: { id_activity: item.get('id') } }}\n      trackEvent={trackEvent}\n    >\n      <Flex className={styles.thumb} justify=\"center\">\n        <LazyImage src={item.get('imgUrl')} />\n        {!item.get('noBadge') ? (\n          <span className={classnames(styles.badge, isOld && styles.used)}>{isOld ? '9成新' : '全新'}</span>\n        ) : (\n          ''\n        )}\n        {showOldPrice &&\n          !item.get('noBadge') && (\n            <div className={styles.icon_box}>\n              <Icon className={styles.icon} type={require('svg/jiangjia.svg')} />\n              <span>直降</span>\n            </div>\n          )}\n      </Flex>\n      <div className={styles.text_box}>\n        <span className={classnames(styles.title, size !== 'xs' && 'ellipsis')}>{item.get('title')}</span>\n        {item.get('assurance') && (\n          <span className={classnames(styles.des, 'ellipsis')}>比购买省￥{item.get('assurance')}起</span>\n        )}\n        <div className={styles.price_box}>\n          <span className={classnames(styles.price, 'special')}>\n            ¥{item.get('price')}\n            <span className={styles.unit}>/月起</span>\n          </span>\n          {showOldPrice && (\n            <span className={styles.old_price}>\n              ￥{item.get('baseFee')}\n              <span className={styles.unit}>/月起</span>\n            </span>\n          )}\n        </div>\n      </div>\n    </Link>\n  )\n}\n\nexport default withSource<ProductProps>(Product)\n"]},"metadata":{},"sourceType":"module"}