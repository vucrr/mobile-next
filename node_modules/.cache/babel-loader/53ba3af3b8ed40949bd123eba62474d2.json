{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Toast from \"antd-mobile/lib/toast\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\n\nvar copy = function copy(value) {\n  if (!document || !navigator) throw new Error('document is missing, can not use copy function in server side.');\n  var el = document.createElement('textarea');\n  el.style.opacity = '0';\n  el.style.position = 'fixed';\n  el.style.left = '0';\n  el.style.top = '0';\n  el.value = value;\n  document.body.appendChild(el);\n\n  if (navigator.userAgent.match(/ipad|ipod|iphone/i)) {\n    var editable = el.contentEditable;\n    var readOnly = el.readOnly;\n    el.contentEditable = 'true';\n    el.readOnly = false;\n    var range = document.createRange();\n    range.selectNodeContents(el);\n    var sel = document.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    el.setSelectionRange(0, 999999);\n    el.contentEditable = editable;\n    el.readOnly = readOnly;\n  } else {\n    el.select();\n  }\n\n  var result = document.execCommand('copy', false, '￥');\n  el.blur(); // 针对uc浏览器兼容\n\n  if (navigator.appVersion.indexOf('UC') !== -1 && result === undefined) {\n    return true;\n  }\n\n  return result;\n};\n\nvar Copy = function Copy(_ref) {\n  var children = _ref.children,\n      text = _ref.text,\n      onCopied = _ref.onCopied,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"text\", \"onCopied\"]);\n\n  var elem = React.Children.only(children);\n\n  var onClick = function onClick(event) {\n    var success = copy(text);\n\n    if (elem && elem.props && typeof elem.props.onClick === 'function') {\n      elem.props.onClick(event);\n    }\n\n    if (success) {\n      onCopied ? onCopied(text) : _Toast.info('复制成功', 1.5);\n    } else {\n      _Toast.info('复制失败', 1.5);\n    }\n  };\n\n  return React.cloneElement(elem, _objectSpread({}, rest, {\n    onClick: onClick\n  }));\n};\n\nexport default Copy;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/components/Copy/Copy.tsx"],"names":["React","copy","value","document","navigator","Error","el","createElement","style","opacity","position","left","top","body","appendChild","userAgent","match","editable","contentEditable","readOnly","range","createRange","selectNodeContents","sel","getSelection","removeAllRanges","addRange","setSelectionRange","select","result","execCommand","blur","appVersion","indexOf","undefined","Copy","children","text","onCopied","rest","elem","Children","only","onClick","event","success","props","info","cloneElement"],"mappings":"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","sourcesContent":["import { Toast } from 'antd-mobile'\nimport React from 'react'\n\ninterface CopyProps extends React.HTMLProps<any> {\n  text: string\n\n  onCopied?(text: string): void\n}\n\nconst copy = (value: string): boolean => {\n  if (!document || !navigator) throw new Error('document is missing, can not use copy function in server side.')\n  const el = document.createElement('textarea')\n  el.style.opacity = '0'\n  el.style.position = 'fixed'\n  el.style.left = '0'\n  el.style.top = '0'\n  el.value = value\n\n  document.body.appendChild(el)\n  if (navigator.userAgent.match(/ipad|ipod|iphone/i)) {\n    const editable = el.contentEditable\n    const readOnly = el.readOnly\n    el.contentEditable = 'true'\n    el.readOnly = false\n    const range = document.createRange()\n    range.selectNodeContents(el)\n    const sel = document.getSelection()!\n    sel.removeAllRanges()\n    sel.addRange(range)\n    el.setSelectionRange(0, 999999)\n    el.contentEditable = editable\n    el.readOnly = readOnly\n  } else {\n    el.select()\n  }\n  const result: any = document.execCommand('copy', false, '￥')\n  el.blur()\n  // 针对uc浏览器兼容\n  if (navigator.appVersion.indexOf('UC') !== -1 && result === undefined) {\n    return true\n  }\n  return result\n}\n\nconst Copy = ({ children, text, onCopied, ...rest }: CopyProps) => {\n  const elem = React.Children.only<any>(children)\n  const onClick = (event: Event) => {\n    const success = copy(text)\n    if (elem && elem.props && typeof elem.props.onClick === 'function') {\n      elem.props.onClick(event)\n    }\n    if (success) {\n      onCopied ? onCopied(text) : Toast.info('复制成功', 1.5)\n    } else {\n      Toast.info('复制失败', 1.5)\n    }\n  }\n\n  return React.cloneElement(elem, { ...rest, onClick })\n}\n\nexport default Copy\n"]},"metadata":{},"sourceType":"module"}