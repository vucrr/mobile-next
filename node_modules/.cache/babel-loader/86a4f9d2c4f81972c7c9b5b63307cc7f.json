{"ast":null,"code":"import _ImagePicker from \"antd-mobile/lib/image-picker\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { uploadBase64 } from 'actions/upload';\nimport classnames from 'classnames';\nimport Loading from 'components/Loading/Loading';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { zipBase64 } from 'utils/tools';\nimport styles from \"./Upload.less\";\n\nvar Upload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Upload, _React$Component);\n\n  function Upload() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Upload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Upload)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      files: _this.props.value,\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(files, operationType, index) {\n        var i, base64, res, onChange;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (_this.props.editable) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                if (!_this.props.value) {\n                  _this.setState({\n                    files: files\n                  });\n                }\n\n                _this.setState({\n                  loading: true\n                });\n\n                i = 0;\n\n              case 5:\n                if (!(i < files.length)) {\n                  _context.next = 18;\n                  break;\n                }\n\n                _context.next = 8;\n                return zipBase64(files[i].url);\n\n              case 8:\n                base64 = _context.sent;\n                _context.next = 11;\n                return _this.props.uploadBase64(base64);\n\n              case 11:\n                res = _context.sent;\n                files[i].url = base64;\n                files[i].file_name = res.file_name;\n                files[i].file_url = res.file_url;\n\n              case 15:\n                i++;\n                _context.next = 5;\n                break;\n\n              case 18:\n                _this.setState({\n                  loading: false\n                });\n\n                onChange = _this.props.onChange;\n\n                if (onChange) {\n                  onChange(files, operationType, index);\n                }\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Upload, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if ('value' in nextProps && this.props.value !== nextProps.value) {\n        var _files = nextProps.value;\n        this.setState({\n          files: _files\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var files = this.state.files;\n      var _this$props = this.props,\n          className = _this$props.className,\n          multiple = _this$props.multiple,\n          selectable = _this$props.selectable,\n          accept = _this$props.accept,\n          onAddImageClick = _this$props.onAddImageClick,\n          onImageClick = _this$props.onImageClick,\n          onFail = _this$props.onFail;\n      var cx = classnames(!this.props.editable && styles.disabled, className);\n      return React.createElement(\"div\", {\n        className: styles.container\n      }, React.createElement(_ImagePicker, {\n        className: cx,\n        multiple: multiple,\n        selectable: selectable,\n        files: files,\n        accept: accept,\n        onChange: this.handleChange,\n        onImageClick: onImageClick,\n        onAddImageClick: onAddImageClick,\n        onFail: onFail\n      }), React.createElement(Loading, {\n        loading: this.state.loading\n      }));\n    }\n  }]);\n\n  return Upload;\n}(React.Component);\n\n_defineProperty(Upload, \"defaultProps\", {\n  editable: true\n});\n\nvar mapStateToProps = function mapStateToProps() {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    uploadBase64: bindActionCreators(uploadBase64, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);","map":{"version":3,"sources":["/Users/viser/mobile-next/src/components/Upload/Upload.tsx"],"names":["uploadBase64","classnames","Loading","React","connect","bindActionCreators","zipBase64","styles","Upload","files","props","value","loading","operationType","index","editable","setState","i","length","url","base64","res","file_name","file_url","onChange","nextProps","state","className","multiple","selectable","accept","onAddImageClick","onImageClick","onFail","cx","disabled","container","handleChange","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { uploadBase64 } from 'actions/upload'\nimport { ImagePicker } from 'antd-mobile'\nimport { ImagePickerPropTypes } from 'antd-mobile/es/image-picker'\nimport classnames from 'classnames'\nimport Loading from 'components/Loading/Loading'\nimport { FileReturns } from 'interfaces/upload'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { zipBase64 } from 'utils/tools'\nimport styles from './Upload.less'\n\ninterface UploadProps extends ImagePickerPropTypes {\n  value: Array<object>\n  editable: boolean\n  uploadBase64: Function\n}\n\ninterface UploadState {\n  files?: Array<object>\n  loading: boolean\n}\n\nclass Upload extends React.Component<UploadProps, UploadState> {\n  static defaultProps = {\n    editable: true,\n  }\n\n  readonly state = {\n    files: this.props.value,\n    loading: false,\n  }\n\n  componentWillReceiveProps(nextProps: UploadProps) {\n    if ('value' in nextProps && this.props.value !== nextProps.value) {\n      const files = nextProps.value\n      this.setState({ files })\n    }\n  }\n\n  handleChange = async (files: Array<any>, operationType: string, index?: number) => {\n    if (!this.props.editable) {\n      return\n    }\n    if (!this.props.value) {\n      this.setState({ files })\n    }\n\n    this.setState({\n      loading: true,\n    })\n\n    for (let i = 0; i < files.length; i++) {\n      const base64 = await zipBase64(files[i].url)\n      const res: FileReturns = await this.props.uploadBase64(base64)\n      files[i].url = base64\n      files[i].file_name = res.file_name\n      files[i].file_url = res.file_url\n    }\n\n    this.setState({\n      loading: false,\n    })\n\n    const onChange = this.props.onChange\n    if (onChange) {\n      onChange(files, operationType, index)\n    }\n  }\n\n  render() {\n    const { files } = this.state\n    const { className, multiple, selectable, accept, onAddImageClick, onImageClick, onFail } = this.props\n    const cx = classnames(!this.props.editable && styles.disabled, className)\n    return (\n      <div className={styles.container}>\n        <ImagePicker\n          className={cx}\n          multiple={multiple}\n          selectable={selectable}\n          files={files}\n          accept={accept}\n          onChange={this.handleChange}\n          onImageClick={onImageClick}\n          onAddImageClick={onAddImageClick}\n          onFail={onFail}\n        />\n        <Loading loading={this.state.loading} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = () => ({})\nconst mapDispatchToProps = (dispatch: any) => ({\n  uploadBase64: bindActionCreators(uploadBase64, dispatch),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Upload as any)\n"]},"metadata":{},"sourceType":"module"}