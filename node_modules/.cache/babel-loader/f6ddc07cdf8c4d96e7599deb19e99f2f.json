{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nimport { FETCH_CANTON_STORE_CITY, FETCH_CANTON_STORE_DETAIL, FETCH_CANTON_STORE_SELECT, LOAD_FETCH_CANTON_STORE_SELECT, SELECT_CANTON_STORE_ITEM } from 'constant/index';\nimport { fromJS } from 'immutable';\nimport { handleActions } from 'redux-actions';\nvar initialReturn = {\n  city: {},\n  detail: {},\n  store_list: []\n};\nvar contonStoreReturn = handleActions((_handleActions = {}, _defineProperty(_handleActions, FETCH_CANTON_STORE_CITY, function (state, _ref) {\n  var payload = _ref.payload;\n  var res = payload;\n  return state.set('city', fromJS(res));\n}), _defineProperty(_handleActions, FETCH_CANTON_STORE_DETAIL, function (state, _ref2) {\n  var payload = _ref2.payload;\n  var res = payload;\n  return state.set('detail', fromJS(res));\n}), _defineProperty(_handleActions, FETCH_CANTON_STORE_SELECT, function (state, _ref3) {\n  var payload = _ref3.payload;\n  var store_list = payload.store_list,\n      page_index = payload.page_index,\n      total_count = payload.total_count,\n      errorMsg = payload.errorMsg;\n\n  if (errorMsg) {\n    return state.set('store_list', fromJS(payload));\n  } else {\n    return state.set('store_list', fromJS(store_list)).set('page_index', fromJS(page_index)).set('total_count', fromJS(total_count));\n  }\n}), _defineProperty(_handleActions, LOAD_FETCH_CANTON_STORE_SELECT, function (state, _ref4) {\n  var payload = _ref4.payload;\n  var store_list = payload.store_list,\n      page_index = payload.page_index,\n      total_count = payload.total_count;\n  var storelists = state.get('store_list').concat(fromJS(store_list));\n  return state.set('store_list', fromJS(storelists)).set('page_index', fromJS(page_index)).set('total_count', fromJS(total_count));\n}), _defineProperty(_handleActions, SELECT_CANTON_STORE_ITEM, function (state, _ref5) {\n  var payload = _ref5.payload;\n  var newList = state.get('store_list').toJS();\n  newList.map(function (item) {\n    item.selected = item.store_code === payload && !item.selected;\n    return item;\n  });\n  return state.set('store_list', fromJS(newList));\n}), _handleActions), fromJS(initialReturn));\nexport default contonStoreReturn;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/reducers/myTrade/canton/store.ts"],"names":["FETCH_CANTON_STORE_CITY","FETCH_CANTON_STORE_DETAIL","FETCH_CANTON_STORE_SELECT","LOAD_FETCH_CANTON_STORE_SELECT","SELECT_CANTON_STORE_ITEM","fromJS","handleActions","initialReturn","city","detail","store_list","contonStoreReturn","state","payload","res","set","page_index","total_count","errorMsg","storelists","get","concat","newList","toJS","map","item","selected","store_code"],"mappings":"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","sourcesContent":["import {\n  FETCH_CANTON_STORE_CITY,\n  FETCH_CANTON_STORE_DETAIL,\n  FETCH_CANTON_STORE_SELECT,\n  LOAD_FETCH_CANTON_STORE_SELECT,\n  SELECT_CANTON_STORE_ITEM,\n} from 'constant/index'\nimport { fromJS } from 'immutable'\nimport { CantonCity, CantonDetail } from 'interfaces/guangzhou'\nimport { handleActions } from 'redux-actions'\n\nconst initialReturn: any = {\n  city: {},\n  detail: {},\n  store_list: [],\n}\n\nconst contonStoreReturn = handleActions(\n  {\n    [FETCH_CANTON_STORE_CITY](state, { payload }) {\n      const res: CantonCity = payload\n      return state.set('city', fromJS(res))\n    },\n    [FETCH_CANTON_STORE_DETAIL](state, { payload }) {\n      const res: CantonDetail = payload\n      return state.set('detail', fromJS(res))\n    },\n    [FETCH_CANTON_STORE_SELECT](state, { payload }) {\n      const { store_list, page_index, total_count, errorMsg } = payload\n      if (errorMsg) {\n        return state.set('store_list', fromJS(payload))\n      } else {\n        return state\n          .set('store_list', fromJS(store_list))\n          .set('page_index', fromJS(page_index))\n          .set('total_count', fromJS(total_count))\n      }\n    },\n    [LOAD_FETCH_CANTON_STORE_SELECT](state, { payload }) {\n      const { store_list, page_index, total_count } = payload\n      const storelists = state.get('store_list').concat(fromJS(store_list))\n      return state\n        .set('store_list', fromJS(storelists))\n        .set('page_index', fromJS(page_index))\n        .set('total_count', fromJS(total_count))\n    },\n    [SELECT_CANTON_STORE_ITEM](state, { payload }) {\n      const newList = state.get('store_list').toJS()\n      newList.map((item: any) => {\n        item.selected = item.store_code === payload && !item.selected\n        return item\n      })\n      return state.set('store_list', fromJS(newList))\n    },\n  },\n  fromJS(initialReturn),\n)\n\nexport default contonStoreReturn\n"]},"metadata":{},"sourceType":"module"}