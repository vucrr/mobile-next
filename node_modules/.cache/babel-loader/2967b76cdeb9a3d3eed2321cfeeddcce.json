{"ast":null,"code":"import _NavBar from \"antd-mobile/lib/nav-bar\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { hiddenTabBar, toggleTabBar } from 'actions/app';\nimport classnames from 'classnames';\nimport { Icon } from 'components';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { sendTitle } from 'utils/app';\nimport \"../../themes/index.less\";\nimport BackTop from \"../BackTop\";\nimport styles from \"./Header.less\";\n\nvar Header =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      hidden: _this.props.isApp || _this.props.hidden || false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleToggle\", function (isShow) {\n      !_this.props.isApp && _this.setState({\n        hidden: !isShow\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          isApp = _this$props.isApp,\n          showTabBar = _this$props.showTabBar,\n          rightContentType = _this$props.rightContentType,\n          extendHead = _this$props.extendHead,\n          renderTitle = _this$props.renderTitle,\n          onToggleTabBar = _this$props.onToggleTabBar,\n          onHiddenTabBar = _this$props.onHiddenTabBar,\n          hidden = _this$props.hidden,\n          backTop = _this$props.backTop,\n          isQsy = _this$props.isQsy,\n          borderBottom = _this$props.borderBottom,\n          headerProps = _objectWithoutProperties(_this$props, [\"children\", \"isApp\", \"showTabBar\", \"rightContentType\", \"extendHead\", \"renderTitle\", \"onToggleTabBar\", \"onHiddenTabBar\", \"hidden\", \"backTop\", \"isQsy\", \"borderBottom\"]);\n\n      var hide = this.state.hidden;\n\n      if (!hidden) {\n        hide = false;\n      }\n\n      var dicRightContentType = {\n        tabBar: React.createElement(\"span\", {\n          className: classnames(styles.btn_nav, showTabBar && styles.active),\n          onClick: function onClick() {\n            return onToggleTabBar && onToggleTabBar();\n          }\n        }, React.createElement(\"i\", null), React.createElement(\"i\", null), React.createElement(\"i\", null))\n      };\n\n      var handleBack = function handleBack() {\n        Router.back();\n      };\n\n      var navBarProps = _objectSpread({\n        leftContent: '',\n        rightContent: (!isQsy || !isApp) && headerProps.rightContent || dicRightContentType[rightContentType || ''],\n        icon: React.createElement(Icon, {\n          type: require('svg/arrow-left.svg'),\n          size: \"sm\"\n        }),\n        onLeftClick: handleBack,\n        mode: 'light'\n      }, headerProps);\n\n      var getTitle = function getTitle() {\n        if (isApp) {\n          sendTitle(children);\n          return children;\n        }\n\n        return _this2.props.isQsy ? '轻松用' : '享换机';\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(Head, null, React.createElement(\"meta\", {\n        name: \"viewport\",\n        key: \"viewport\",\n        content: \"width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no,viewport-fit=cover\"\n      }), React.createElement(\"title\", null, getTitle()), extendHead), !this.props.isApp && React.createElement(\"div\", {\n        id: \"fixedHeader\",\n        className: classnames(styles['fixed-top'], !hide && styles.show, !borderBottom && styles.bdnone)\n      }, renderTitle && React.createElement(_NavBar, navBarProps, renderTitle()), !renderTitle && React.createElement(_NavBar, navBarProps, children.length > 12 ? \"\".concat(children.substr(0, 12), \"...\") : children)), backTop && React.createElement(BackTop, {\n        backTop: backTop,\n        onToggle: this.handleToggle,\n        showTabBar: showTabBar,\n        onHiddenTabBar: onHiddenTabBar\n      }));\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\n_defineProperty(Header, \"defaultProps\", {\n  hidden: false,\n  backTop: false,\n  rightContentType: 'tabBar',\n  borderBottom: true\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    showTabBar: state.getIn(['app', 'tabBar', 'show']),\n    isApp: state.getIn(['serverApp', 'ua', 'isApp']),\n    isQsy: state.getIn(['serverApp', 'utm', 'isQsy'])\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onToggleTabBar: bindActionCreators(toggleTabBar, dispatch),\n    onHiddenTabBar: bindActionCreators(hiddenTabBar, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/Users/viser/mobile-next/src/components/Header/Header.tsx"],"names":["hiddenTabBar","toggleTabBar","classnames","Icon","Head","Router","React","connect","bindActionCreators","sendTitle","BackTop","styles","Header","hidden","props","isApp","isShow","setState","children","showTabBar","rightContentType","extendHead","renderTitle","onToggleTabBar","onHiddenTabBar","backTop","isQsy","borderBottom","headerProps","hide","state","dicRightContentType","tabBar","btn_nav","active","handleBack","back","navBarProps","leftContent","rightContent","icon","require","onLeftClick","mode","getTitle","show","bdnone","length","substr","handleToggle","Component","mapStateToProps","getIn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { hiddenTabBar, toggleTabBar } from 'actions/app'\nimport { NavBar } from 'antd-mobile'\nimport { NavBarProps } from 'antd-mobile/lib/nav-bar/PropsType'\nimport classnames from 'classnames'\nimport { Icon } from 'components'\nimport Head from 'next/head'\nimport Router from 'next/router'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { sendTitle } from 'utils/app'\nimport '../../themes/index.less'\nimport BackTop from '../BackTop'\nimport styles from './Header.less'\n\nexport interface HeaderProps extends NavBarProps {\n  children: any // string\n  showTabBar?: boolean\n  isApp?: boolean\n  rightContentType?: string\n  extendHead?: React.ReactNode\n  renderTitle?: Function\n  onToggleTabBar?: Function\n  onHiddenTabBar?: Function\n  hidden?: boolean\n  backTop?: any\n  isQsy?: boolean\n  borderBottom?: boolean // true 头部有底部分割 false 没有底部分割\n}\n\nclass Header extends React.Component<HeaderProps, { hidden: boolean }> {\n  static defaultProps = {\n    hidden: false,\n    backTop: false,\n    rightContentType: 'tabBar',\n    borderBottom: true,\n  }\n\n  readonly state = {\n    hidden: this.props.isApp || this.props.hidden || false,\n  }\n\n  handleToggle = (isShow: boolean) => {\n    !this.props.isApp && this.setState({ hidden: !isShow })\n  }\n\n  render() {\n    const {\n      children,\n      isApp,\n      showTabBar,\n      rightContentType,\n      extendHead,\n      renderTitle,\n      onToggleTabBar,\n      onHiddenTabBar,\n      hidden,\n      backTop,\n      isQsy,\n      borderBottom,\n      ...headerProps\n    } = this.props\n    let hide = this.state.hidden\n    if (!hidden) {\n      hide = false\n    }\n\n    const dicRightContentType: { [index: string]: React.ReactNode } = {\n      tabBar: (\n        <span\n          className={classnames(styles.btn_nav, showTabBar && styles.active)}\n          onClick={() => onToggleTabBar && onToggleTabBar()}\n        >\n          <i />\n          <i />\n          <i />\n        </span>\n      ),\n    }\n\n    const handleBack = () => {\n      Router.back()\n    }\n\n    const navBarProps: any = {\n      leftContent: '',\n      rightContent: ((!isQsy || !isApp) && headerProps.rightContent) || dicRightContentType[rightContentType || ''],\n      icon: <Icon type={require('svg/arrow-left.svg')} size=\"sm\" />,\n      onLeftClick: handleBack,\n      mode: 'light',\n      ...headerProps,\n    }\n\n    const getTitle = () => {\n      if (isApp) {\n        sendTitle(children)\n        return children\n      }\n      return this.props.isQsy ? '轻松用' : '享换机'\n    }\n\n    return (\n      <>\n        <Head>\n          <meta\n            name=\"viewport\"\n            key=\"viewport\"\n            content=\"width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no,viewport-fit=cover\"\n          />\n          <title>{getTitle()}</title>\n          {extendHead}\n        </Head>\n        {!this.props.isApp && (\n          <div\n            id=\"fixedHeader\"\n            className={classnames(styles['fixed-top'], !hide && styles.show, !borderBottom && styles.bdnone)}\n          >\n            {renderTitle && <NavBar {...navBarProps}>{renderTitle()}</NavBar>}\n            {!renderTitle && (\n              <NavBar {...navBarProps}>{children.length > 12 ? `${children.substr(0, 12)}...` : children}</NavBar>\n            )}\n          </div>\n        )}\n        {backTop && (\n          <BackTop\n            backTop={backTop}\n            onToggle={this.handleToggle}\n            showTabBar={showTabBar}\n            onHiddenTabBar={onHiddenTabBar}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  showTabBar: state.getIn(['app', 'tabBar', 'show']),\n  isApp: state.getIn(['serverApp', 'ua', 'isApp']),\n  isQsy: state.getIn(['serverApp', 'utm', 'isQsy']),\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onToggleTabBar: bindActionCreators(toggleTabBar, dispatch),\n  onHiddenTabBar: bindActionCreators(hiddenTabBar, dispatch),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Header) as React.ComponentClass<HeaderProps>\n"]},"metadata":{},"sourceType":"module"}