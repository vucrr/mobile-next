{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Toast from \"antd-mobile/lib/toast\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { delayHandle } from 'utils/tools';\nimport styles from \"./BtnSendSms.less\";\nvar isClick = false;\n\nvar BtnSendSms = function BtnSendSms(_ref) {\n  var className = _ref.className,\n      onValidAndSend = _ref.onValidAndSend;\n  var tickTotal = 60;\n\n  var _useState = useState(tickTotal),\n      _useState2 = _slicedToArray(_useState, 2),\n      tick = _useState2[0],\n      setTick = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isTick = _useState4[0],\n      setIsTick = _useState4[1];\n\n  var _useState5 = useState('获取验证码'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      btnText = _useState6[0],\n      setBtnText = _useState6[1];\n\n  var clearTick = function clearTick() {\n    setIsTick(false);\n    setTick(tickTotal);\n  };\n\n  var tickTime =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(isTick && tick > 0)) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.t0 = tick < tickTotal;\n\n              if (!_context.t0) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 5;\n              return delayHandle(1);\n\n            case 5:\n              setTick(tick - 1);\n              _context.next = 9;\n              break;\n\n            case 8:\n              clearTick();\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function tickTime() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    return clearTick;\n  }, []);\n  useEffect(function () {\n    // tslint:disable-next-line\n    tickTime();\n  }, [isTick, tick]);\n\n  var handleSend =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var isValid;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(isTick || isClick)) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              isClick = true;\n              _context2.next = 5;\n              return new _Promise(function (resolve) {\n                return onValidAndSend(resolve);\n              });\n\n            case 5:\n              isValid = _context2.sent;\n\n              if (isValid) {\n                setIsTick(true);\n                setBtnText('重新获取');\n\n                _Toast.info('验证码发送成功！请登录邮箱查看');\n              }\n\n              isClick = false;\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSend() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(\"div\", {\n    className: classnames(styles.btn_sms, className, _defineProperty({}, styles.is_tick, isTick)),\n    onClick: handleSend\n  }, isTick ? \"\".concat(tick, \"s\") : btnText);\n};\n\nexport default BtnSendSms;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/components/BtnSendSms/BtnSendSms.tsx"],"names":["classnames","React","useEffect","useState","delayHandle","styles","isClick","BtnSendSms","className","onValidAndSend","tickTotal","tick","setTick","isTick","setIsTick","btnText","setBtnText","clearTick","tickTime","handleSend","resolve","isValid","info","btn_sms","is_tick"],"mappings":";;;;;;AACA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP;AAOA,IAAIC,OAAO,GAAG,KAAd;;AAEA,IAAMC,UAAoD,GAAG,SAAvDA,UAAuD,OAAmC;AAAA,MAAhCC,SAAgC,QAAhCA,SAAgC;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;AAC9F,MAAMC,SAAS,GAAG,EAAlB;;AAD8F,kBAEtEP,QAAQ,CAACO,SAAD,CAF8D;AAAA;AAAA,MAEvFC,IAFuF;AAAA,MAEjFC,OAFiF;;AAAA,mBAGlET,QAAQ,CAAC,KAAD,CAH0D;AAAA;AAAA,MAGvFU,MAHuF;AAAA,MAG/EC,SAH+E;;AAAA,mBAIhEX,QAAQ,CAAC,OAAD,CAJwD;AAAA;AAAA,MAIvFY,OAJuF;AAAA,MAI9EC,UAJ8E;;AAM9F,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBH,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,IAAAA,OAAO,CAACF,SAAD,CAAP;AACD,GAHD;;AAKA,MAAMQ,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA,oBACXL,MAAM,IAAIF,IAAI,GAAG,CADN;AAAA;AAAA;AAAA;;AAAA,4BAEbA,IAAI,GAAGD,SAFM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEcN,WAAW,CAAC,CAAD,CAFzB;;AAAA;AAGbQ,cAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AAHa;AAAA;;AAAA;AAKbM,cAAAA,SAAS;;AALI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARC,QAAQ;AAAA;AAAA;AAAA,KAAd;;AASAhB,EAAAA,SAAS,CAAC,YAAM;AACd,WAAOe,SAAP;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAf,EAAAA,SAAS,CACP,YAAM;AACJ;AACAgB,IAAAA,QAAQ;AACT,GAJM,EAKP,CAACL,MAAD,EAASF,IAAT,CALO,CAAT;;AAQA,MAAMQ,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACbN,MAAM,IAAIP,OADG;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIjBA,cAAAA,OAAO,GAAG,IAAV;AAJiB;AAAA,qBAKK,aAAqB,UAACc,OAAD,EAAyC;AAClF,uBAAOX,cAAc,CAACW,OAAD,CAArB;AACD,eAFqB,CALL;;AAAA;AAKXC,cAAAA,OALW;;AAQjB,kBAAIA,OAAJ,EAAa;AACXP,gBAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,gBAAAA,UAAU,CAAC,MAAD,CAAV;;AACA,uBAAMM,IAAN,CAAW,iBAAX;AACD;;AACDhB,cAAAA,OAAO,GAAG,KAAV;;AAbiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVa,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAgBA,SACE;AAAK,IAAA,SAAS,EAAEnB,UAAU,CAACK,MAAM,CAACkB,OAAR,EAAiBf,SAAjB,sBAA+BH,MAAM,CAACmB,OAAtC,EAAgDX,MAAhD,EAA1B;AAAqF,IAAA,OAAO,EAAEM;AAA9F,KACGN,MAAM,aAAMF,IAAN,SAAgBI,OADzB,CADF;AAKD,CArDD;;AAuDA,eAAeR,UAAf","sourcesContent":["import { Toast } from 'antd-mobile'\nimport classnames from 'classnames'\nimport React, { useEffect, useState } from 'react'\nimport { delayHandle } from 'utils/tools'\nimport styles from './BtnSendSms.less'\n\nexport interface BtnSendSmsProps {\n  className?: string\n  onValidAndSend: (resolve: (isValid: boolean) => void) => Promise<void>\n}\n\nlet isClick = false\n\nconst BtnSendSms: React.FunctionComponent<BtnSendSmsProps> = ({ className, onValidAndSend }) => {\n  const tickTotal = 60\n  const [tick, setTick] = useState(tickTotal)\n  const [isTick, setIsTick] = useState(false)\n  const [btnText, setBtnText] = useState('获取验证码')\n\n  const clearTick = () => {\n    setIsTick(false)\n    setTick(tickTotal)\n  }\n\n  const tickTime = async () => {\n    if (isTick && tick > 0) {\n      tick < tickTotal && (await delayHandle(1))\n      setTick(tick - 1)\n    } else {\n      clearTick()\n    }\n  }\n\n  useEffect(() => {\n    return clearTick\n  }, [])\n\n  useEffect(\n    () => {\n      // tslint:disable-next-line\n      tickTime()\n    },\n    [isTick, tick],\n  )\n\n  const handleSend = async () => {\n    if (isTick || isClick) {\n      return\n    }\n    isClick = true\n    const isValid = await new Promise<boolean>((resolve: (isValid: boolean) => void) => {\n      return onValidAndSend(resolve)\n    })\n    if (isValid) {\n      setIsTick(true)\n      setBtnText('重新获取')\n      Toast.info('验证码发送成功！请登录邮箱查看')\n    }\n    isClick = false\n  }\n\n  return (\n    <div className={classnames(styles.btn_sms, className, { [styles.is_tick]: isTick })} onClick={handleSend}>\n      {isTick ? `${tick}s` : btnText}\n    </div>\n  )\n}\n\nexport default BtnSendSms\n"]},"metadata":{},"sourceType":"module"}