{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.getIn(['serverApp', 'auth'])\n  };\n};\n\nfunction withAuth(WrappedComponent) {\n  var WithAuth = function WithAuth(_ref) {\n    var dispatch = _ref.dispatch,\n        auth = _ref.auth,\n        props = _objectWithoutProperties(_ref, [\"dispatch\", \"auth\"]);\n\n    return React.createElement(WrappedComponent, _extends({\n      auth: auth\n    }, props));\n  };\n\n  WithAuth.displayName = \"HocWithAuth(\".concat(getDisplayName(WrappedComponent), \")\");\n  return connect(mapStateToProps)(WithAuth);\n}\n\nexport default withAuth;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/components/withAuth/withAuth.tsx"],"names":["React","connect","getDisplayName","WrappedComponent","displayName","name","mapStateToProps","state","auth","getIn","withAuth","WithAuth","dispatch","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAWA,SAASC,cAAT,CAA2BC,gBAA3B,EAAqE;AACnE,SAAOA,gBAAgB,CAACC,WAAjB,IAAgCD,gBAAgB,CAACE,IAAjD,IAAyD,WAAhE;AACD;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAiB;AACvCC,IAAAA,IAAI,EAAED,KAAK,CAACE,KAAN,CAAY,CAAC,WAAD,EAAc,MAAd,CAAZ;AADiC,GAAjB;AAAA,CAAxB;;AAIA,SAASC,QAAT,CAAqBP,gBAArB,EAA2E;AAEzE,MAAMQ,QAAwC,GAAG,SAA3CA,QAA2C,OAAkC;AAAA,QAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,QAArBJ,IAAqB,QAArBA,IAAqB;AAAA,QAAZK,KAAY;;AACjF,WAAO,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEL;AAAxB,OAAkCK,KAAlC,EAAP;AACD,GAFD;;AAIAF,EAAAA,QAAQ,CAACP,WAAT,yBAAsCF,cAAc,CAACC,gBAAD,CAApD;AAEA,SAAOF,OAAO,CAA4CK,eAA5C,CAAP,CAAoEK,QAApE,CAAP;AACD;;AAED,eAAeD,QAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\n\ntype OwnProps = {\n  dispatch: Dispatch\n}\n\ntype AuthProps = {\n  auth: any\n}\n\nfunction getDisplayName<T>(WrappedComponent: React.ComponentType<T>) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component'\n}\n\nconst mapStateToProps = (state: any) => ({\n  auth: state.getIn(['serverApp', 'auth']),\n})\n\nfunction withAuth<T>(WrappedComponent: React.ComponentType<T & AuthProps>) {\n  type Props = OwnProps & AuthProps\n  const WithAuth: React.FunctionComponent<Props> = ({ dispatch, auth, ...props }) => {\n    return <WrappedComponent auth={auth} {...props as T} />\n  }\n\n  WithAuth.displayName = `HocWithAuth(${getDisplayName(WrappedComponent)})`\n\n  return connect<ReturnType<typeof mapStateToProps>, {}, T>(mapStateToProps)(WithAuth)\n}\n\nexport default withAuth\n"]},"metadata":{},"sourceType":"module"}