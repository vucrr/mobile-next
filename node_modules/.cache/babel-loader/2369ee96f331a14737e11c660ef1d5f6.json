{"ast":null,"code":"import { Container, Header, TabBar } from 'components';\nimport Error from 'containers/Error';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CreditTips from \"./CreditTips\";\nimport InfoList from \"./InfoList\"; // const mapDispatchToProps = (dispatch: RDispatch) => ({\n// })\n\nvar CreditEvaluation = function CreditEvaluation(_ref) {\n  var error = _ref.error,\n      creditData = _ref.creditData;\n\n  if (error.code !== 200) {\n    return React.createElement(Error, {\n      statusCode: error.code,\n      status: error.status,\n      errorMsg: error.errorMsg\n    });\n  }\n\n  var containerProps = {\n    renderHeader: React.createElement(Header, null, \"\\u4FE1\\u7528\\u8BC4\\u4F30\\u786E\\u8BA4\"),\n    renderTabBar: React.createElement(TabBar, {\n      hidden: true\n    }),\n    bgColor: '#ffffff'\n  };\n  return React.createElement(Container, containerProps, React.createElement(CreditTips, null), React.createElement(InfoList, null));\n}; // CreditEvaluation.getInitialProps = async ({}: GetInitialPropsContext<CreditEvaluationQuery>) => {\n// }\n\n\nexport default connect(mapStateToProps)(CreditEvaluation);","map":{"version":3,"sources":["/Users/viser/mobile-next/src/containers/MyTrade/Assess/List/index.tsx"],"names":["Container","Header","TabBar","Error","React","connect","CreditTips","InfoList","CreditEvaluation","error","creditData","code","status","errorMsg","containerProps","renderHeader","renderTabBar","bgColor","mapStateToProps"],"mappings":"AACA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,QAA0C,YAA1C;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP,mB,CAIA;AACA;;AASA,IAAMC,gBAAiD,GAAG,SAApDA,gBAAoD,OAAkD;AAAA,MAA/CC,KAA+C,QAA/CA,KAA+C;AAAA,MAAxCC,UAAwC,QAAxCA,UAAwC;;AAC1G,MAAID,KAAK,CAACE,IAAN,KAAe,GAAnB,EAAwB;AACtB,WAAO,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAEF,KAAK,CAACE,IAAzB;AAA+B,MAAA,MAAM,EAAEF,KAAK,CAACG,MAA7C;AAAqD,MAAA,QAAQ,EAAEH,KAAK,CAACI;AAArE,MAAP;AACD;;AAED,MAAMC,cAAc,GAAG;AACrBC,IAAAA,YAAY,EAAE,oBAAC,MAAD,+CADO;AAErBC,IAAAA,YAAY,EAAE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE;AAAhB,MAFO;AAGrBC,IAAAA,OAAO,EAAC;AAHa,GAAvB;AAMA,SACE,oBAAC,SAAD,EAAeH,cAAf,EACI,oBAAC,UAAD,OADJ,EAEI,oBAAC,QAAD,OAFJ,CADF;AAMD,CAjBD,C,CAmBA;AAEA;;;AAEA,eAAeT,OAAO,CAACa,eAAD,CAAP,CAAyBV,gBAAzB,CAAf","sourcesContent":["import { NextSFC2 } from '@@types/next'\nimport { Container, Header, TabBar } from 'components'\nimport Error from 'containers/Error'\nimport { ErrorObject } from 'interfaces/error'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport CreditTips from './CreditTips'\nimport InfoList from './InfoList'\n\n\n\n// const mapDispatchToProps = (dispatch: RDispatch) => ({\n// })\n\n\n\ninterface CreditEvaluationProps extends ErrorObject {\n  creditData : any\n\n}\n\nconst CreditEvaluation: NextSFC2<CreditEvaluationProps> = ({ error ,creditData }: CreditEvaluationProps) => {\n  if (error.code !== 200) {\n    return <Error statusCode={error.code} status={error.status} errorMsg={error.errorMsg} />\n  }\n\n  const containerProps = {\n    renderHeader: <Header>信用评估确认</Header>,\n    renderTabBar: <TabBar hidden={true} />,\n    bgColor:'#ffffff'\n  }\n\n  return (\n    <Container {...containerProps}>\n        <CreditTips />\n        <InfoList />    \n    </Container>\n  )\n}\n\n// CreditEvaluation.getInitialProps = async ({}: GetInitialPropsContext<CreditEvaluationQuery>) => {\n\n// }\n\nexport default connect(mapStateToProps)(CreditEvaluation)\n"]},"metadata":{},"sourceType":"module"}