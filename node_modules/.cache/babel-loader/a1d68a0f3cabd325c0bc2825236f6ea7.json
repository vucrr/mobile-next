{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { INIT_TABBAR } from 'constant/index';\nimport { fromJS } from 'immutable';\nimport { handleActions } from 'redux-actions';\nimport { getAuth, getBbfHeaders, getBfaHeaders, getQsyHeaders, getTabBar, getUtm } from 'store/createStore';\nimport cookies from 'utils/cookies';\nimport { getUA } from \"../../server/utils/tools\";\nexport var preloadedServerApp = fromJS({\n  tabBar: {\n    hideHome: false,\n    linkToDic: {\n      home: '/',\n      product: '/product/category',\n      myCenter: '/account/center'\n    }\n  },\n  ua: {},\n  utm: {},\n  auth: {},\n  headers: {},\n  headers2: {\n    userToken: '',\n    userIdV2: ''\n  }\n});\nvar serverApp = handleActions(_defineProperty({}, INIT_TABBAR, function (state) {\n  // tslint:disable-next-line\n  if (typeof window !== 'undefined') {\n    var ua = navigator.userAgent;\n    var channelId = +(cookies.get('channelId') || '0');\n    var userId = cookies.get('user_id_v2');\n    return state.set('ua', fromJS(getUA(ua, channelId))).set('utm', fromJS(getUtm(channelId))).set('headers', fromJS(getBbfHeaders(document.cookie, ua))).set('headers2', fromJS(getBfaHeaders())).set('headers3', fromJS(getQsyHeaders())).set('auth', fromJS(getAuth(userId))).set('tabBar', fromJS(getTabBar(channelId)));\n  }\n\n  return state;\n}), fromJS(preloadedServerApp));\nexport default serverApp;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/reducers/server-app.ts"],"names":["INIT_TABBAR","fromJS","handleActions","getAuth","getBbfHeaders","getBfaHeaders","getQsyHeaders","getTabBar","getUtm","cookies","getUA","preloadedServerApp","tabBar","hideHome","linkToDic","home","product","myCenter","ua","utm","auth","headers","headers2","userToken","userIdV2","serverApp","state","window","navigator","userAgent","channelId","get","userId","set","document","cookie"],"mappings":";AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,OAAT,EAAkBC,aAAlB,EAAiCC,aAAjC,EAAgDC,aAAhD,EAA+DC,SAA/D,EAA0EC,MAA1E,QAAwF,mBAAxF;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,KAAT;AAEA,OAAO,IAAMC,kBAAkB,GAAGV,MAAM,CAAC;AACvCW,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,KADJ;AAENC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE,GADG;AAETC,MAAAA,OAAO,EAAE,mBAFA;AAGTC,MAAAA,QAAQ,EAAE;AAHD;AAFL,GAD+B;AASvCC,EAAAA,EAAE,EAAE,EATmC;AAUvCC,EAAAA,GAAG,EAAE,EAVkC;AAWvCC,EAAAA,IAAI,EAAE,EAXiC;AAYvCC,EAAAA,OAAO,EAAE,EAZ8B;AAavCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,EADH;AAERC,IAAAA,QAAQ,EAAE;AAFF;AAb6B,CAAD,CAAjC;AAmBP,IAAMC,SAAS,GAAGvB,aAAa,qBAE1BF,WAF0B,YAEb0B,KAFa,EAEN;AACnB;AACA,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,QAAMT,EAAE,GAAGU,SAAS,CAACC,SAArB;AACA,QAAMC,SAAS,GAAG,EAAErB,OAAO,CAACsB,GAAR,CAAY,WAAZ,KAA4B,GAA9B,CAAlB;AACA,QAAMC,MAAM,GAAGvB,OAAO,CAACsB,GAAR,CAAY,YAAZ,CAAf;AACA,WAAOL,KAAK,CACTO,GADI,CACA,IADA,EACMhC,MAAM,CAACS,KAAK,CAACQ,EAAD,EAAKY,SAAL,CAAN,CADZ,EAEJG,GAFI,CAEA,KAFA,EAEOhC,MAAM,CAACO,MAAM,CAACsB,SAAD,CAAP,CAFb,EAGJG,GAHI,CAGA,SAHA,EAGWhC,MAAM,CAACG,aAAa,CAAC8B,QAAQ,CAACC,MAAV,EAAkBjB,EAAlB,CAAd,CAHjB,EAIJe,GAJI,CAIA,UAJA,EAIYhC,MAAM,CAACI,aAAa,EAAd,CAJlB,EAKJ4B,GALI,CAKA,UALA,EAKYhC,MAAM,CAACK,aAAa,EAAd,CALlB,EAMJ2B,GANI,CAMA,MANA,EAMQhC,MAAM,CAACE,OAAO,CAAC6B,MAAD,CAAR,CANd,EAOJC,GAPI,CAOA,QAPA,EAOUhC,MAAM,CAACM,SAAS,CAACuB,SAAD,CAAV,CAPhB,CAAP;AAQD;;AACD,SAAOJ,KAAP;AACD,CAlB0B,GAoB7BzB,MAAM,CAACU,kBAAD,CApBuB,CAA/B;AAuBA,eAAec,SAAf","sourcesContent":["import { INIT_TABBAR } from 'constant/index'\nimport { fromJS } from 'immutable'\nimport { handleActions } from 'redux-actions'\nimport { getAuth, getBbfHeaders, getBfaHeaders, getQsyHeaders, getTabBar, getUtm } from 'store/createStore'\nimport cookies from 'utils/cookies'\nimport { getUA } from '../../server/utils/tools'\n\nexport const preloadedServerApp = fromJS({\n  tabBar: {\n    hideHome: false,\n    linkToDic: {\n      home: '/',\n      product: '/product/category',\n      myCenter: '/account/center',\n    },\n  },\n  ua: {},\n  utm: {},\n  auth: {},\n  headers: {},\n  headers2: {\n    userToken: '',\n    userIdV2: '',\n  },\n})\n\nconst serverApp = handleActions(\n  {\n    [INIT_TABBAR](state) {\n      // tslint:disable-next-line\n      if (typeof window !== 'undefined') {\n        const ua = navigator.userAgent\n        const channelId = +(cookies.get('channelId') || '0')\n        const userId = cookies.get('user_id_v2')\n        return state\n          .set('ua', fromJS(getUA(ua, channelId)))\n          .set('utm', fromJS(getUtm(channelId)))\n          .set('headers', fromJS(getBbfHeaders(document.cookie, ua)))\n          .set('headers2', fromJS(getBfaHeaders()))\n          .set('headers3', fromJS(getQsyHeaders()))\n          .set('auth', fromJS(getAuth(userId)))\n          .set('tabBar', fromJS(getTabBar(channelId)))\n      }\n      return state\n    },\n  },\n  fromJS(preloadedServerApp),\n)\n\nexport default serverApp\n"]},"metadata":{},"sourceType":"module"}