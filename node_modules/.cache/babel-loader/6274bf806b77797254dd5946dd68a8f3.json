{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport * as centerActions from 'actions/account/center';\nimport { checkLogin, redirectTo } from 'actions/app';\nimport { Container, Header, TabBar, Wrap } from 'components';\nimport Error from 'containers/Error';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { cleanUserInfo } from 'utils/tools';\nimport NavBox from \"./NavBox\";\nimport RecommendList from \"./RecommendList\";\nimport ServiceBox from \"./ServiceBox\";\nimport TopBox from \"./TopBox\";\n\nvar Center =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Center, _React$Component);\n\n  function Center() {\n    _classCallCheck(this, Center);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Center).apply(this, arguments));\n  }\n\n  _createClass(Center, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var error = this.props.error;\n\n      if (error && error.code === 501) {\n        cleanUserInfo();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          error = _this$props.error,\n          utm = _this$props.utm,\n          info = _this$props.info;\n\n      if (error) {\n        return React.createElement(Error, {\n          statusCode: error.status,\n          errorMsg: error.errorMsg\n        });\n      }\n\n      var containerProps = {\n        renderHeader: React.createElement(Header, {\n          hidden: true\n        }, \"\\u4E2A\\u4EBA\\u4E2D\\u5FC3\"),\n        renderTabBar: React.createElement(TabBar, {\n          selectedTab: \"myCenter\"\n        }),\n        fixedTabBar: true\n      };\n      var topBoxProps = {\n        mobile: info.getIn(['user', 'mobile']),\n        thumb: info.getIn(['user', 'head_portrait'])\n      };\n      var navBoxProps = {\n        balance: info.getIn(['balance_ticket', 'balance']),\n        coupon: info.getIn(['balance_ticket', 'coupon'])\n      };\n      var serviceBoxProps = {\n        showTitle: info.getIn(['service', 'is_available_history']),\n        list: info.getIn(['service', 'contracts']).toJS() || []\n      };\n      var showRecommendList = !utm.get('isCmblife') && !utm.get('isDxsh');\n      return React.createElement(Container, containerProps, React.createElement(TopBox, topBoxProps, React.createElement(ServiceBox, serviceBoxProps)), React.createElement(Wrap, {\n        bgColor: \"#fff\"\n      }, React.createElement(NavBox, navBoxProps), showRecommendList && React.createElement(RecommendList, {\n        list: info.getIn(['recommend', 'list']).toJS() || []\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var store, isServer, res, asPath, req, isLogin, data, path;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref.store, isServer = _ref.isServer, res = _ref.res, asPath = _ref.asPath, req = _ref.req;\n                _context.next = 3;\n                return store.dispatch(checkLogin({\n                  isServer: isServer,\n                  res: res,\n                  asPath: asPath,\n                  req: req\n                }));\n\n              case 3:\n                isLogin = _context.sent;\n\n                if (!isLogin) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 7;\n                return store.dispatch(centerActions.fetchInfo({\n                  req: req\n                }));\n\n              case 7:\n                data = _context.sent;\n\n                if (!data.status) {\n                  _context.next = 10;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  error: data\n                });\n\n              case 10:\n                if (!(data.user && !data.user.bind_mobile)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                // 支付宝新用户，需要绑定手机号\n                path = '/myaccount/bind/change-phone?redirect_url=%2Faccount%2Fcenter';\n                _context.next = 14;\n                return redirectTo({\n                  isServer: isServer,\n                  res: res,\n                  path: path\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Center;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    info: state.getIn(['account', 'center', 'newInfo']),\n    utm: state.getIn(['serverApp', 'utm'])\n  };\n};\n\nexport default connect(mapStateToProps)(Center);","map":{"version":3,"sources":["/Users/viser/mobile-next/src/containers/MyAccount/Center/index.tsx"],"names":["centerActions","checkLogin","redirectTo","Container","Header","TabBar","Wrap","Error","React","connect","cleanUserInfo","NavBox","RecommendList","ServiceBox","TopBox","Center","error","props","code","utm","info","status","errorMsg","containerProps","renderHeader","renderTabBar","fixedTabBar","topBoxProps","mobile","getIn","thumb","navBoxProps","balance","coupon","serviceBoxProps","showTitle","list","toJS","showRecommendList","get","store","isServer","res","asPath","req","dispatch","isLogin","fetchInfo","data","user","bind_mobile","path","Component","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { GetInitialPropsContext } from '@@types/next'\nimport * as centerActions from 'actions/account/center'\nimport { checkLogin, redirectTo } from 'actions/app'\nimport { Container, Header, TabBar, Wrap } from 'components'\nimport { SourceProps } from 'components/withSource'\nimport Error from 'containers/Error'\nimport { ErrorObject } from 'interfaces/error'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { cleanUserInfo } from 'utils/tools'\nimport NavBox from './NavBox'\nimport RecommendList from './RecommendList'\nimport ServiceBox from './ServiceBox'\nimport TopBox from './TopBox'\n\nexport interface CenterProps extends ErrorObject {\n  info: any\n}\n\nexport interface CenterState {}\n\nclass Center extends React.Component<CenterProps & SourceProps, CenterState> {\n  static async getInitialProps({ store, isServer, res, asPath, req }: GetInitialPropsContext) {\n    const isLogin = await store.dispatch(checkLogin({ isServer, res, asPath, req }))\n    if (isLogin) {\n      const data = await store.dispatch(centerActions.fetchInfo({ req }))\n      if (data.status) {\n        return { error: data }\n      }\n      if (data.user && !data.user.bind_mobile) {\n        // 支付宝新用户，需要绑定手机号\n        const path = '/myaccount/bind/change-phone?redirect_url=%2Faccount%2Fcenter'\n        await redirectTo({ isServer, res, path })\n      }\n    }\n  }\n\n  componentDidMount() {\n    const { error } = this.props\n    if (error && error.code === 501) {\n      cleanUserInfo()\n    }\n  }\n\n  render() {\n    const { error, utm, info } = this.props\n    if (error) {\n      return <Error statusCode={error.status} errorMsg={error.errorMsg} />\n    }\n\n    const containerProps = {\n      renderHeader: <Header hidden={true}>个人中心</Header>,\n      renderTabBar: <TabBar selectedTab=\"myCenter\" />,\n      fixedTabBar: true,\n    }\n\n    const topBoxProps = {\n      mobile: info.getIn(['user', 'mobile']),\n      thumb: info.getIn(['user', 'head_portrait']),\n    }\n\n    const navBoxProps = {\n      balance: info.getIn(['balance_ticket', 'balance']),\n      coupon: info.getIn(['balance_ticket', 'coupon']),\n    }\n\n    const serviceBoxProps = {\n      showTitle: info.getIn(['service', 'is_available_history']),\n      list: info.getIn(['service', 'contracts']).toJS() || [],\n    }\n\n    const showRecommendList = !utm.get('isCmblife') && !utm.get('isDxsh')\n\n    return (\n      <Container {...containerProps}>\n        <TopBox {...topBoxProps}>\n          <ServiceBox {...serviceBoxProps} />\n        </TopBox>\n        <Wrap bgColor=\"#fff\">\n          <NavBox {...navBoxProps} />\n          {showRecommendList && <RecommendList list={info.getIn(['recommend', 'list']).toJS() || []} />}\n        </Wrap>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  info: state.getIn(['account', 'center', 'newInfo']),\n  utm: state.getIn(['serverApp', 'utm']),\n})\n\nexport default connect(mapStateToProps)(Center)\n"]},"metadata":{},"sourceType":"module"}