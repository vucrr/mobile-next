{"ast":null,"code":"import _Toast from \"antd-mobile/lib/toast\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { getHeaders2 } from 'actions/actionHelper';\nimport { FETCH_TRADE_ASSESS_LIST_INFO } from 'constant/index';\nimport { createAction } from 'redux-actions';\nimport { isIOS } from 'utils/app';\nimport { axios, tools } from 'utils/index';\nvar receiveInfo = createAction(FETCH_TRADE_ASSESS_LIST_INFO);\nexport var getCreditEntrydata = function getCreditEntrydata(_ref) {\n  var query = _ref.query,\n      req = _ref.req;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var url, headers, _ref3, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // const url = 'node-api/trade/creditevaluation'\n                url = 'mock/mytrade/assess/list';\n                headers = getHeaders2(req);\n                _context.prev = 2;\n                _context.next = 5;\n                return axios.get(url, {\n                  params: query,\n                  headers: headers\n                });\n\n              case 5:\n                _ref3 = _context.sent;\n                data = _ref3.data;\n                data && dispatch(receiveInfo(data));\n                return _context.abrupt(\"return\", data);\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                tools.ErrorLog(_context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var sendGPSFlow = function sendGPSFlow(params) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(_) {\n        var url, headers, _ref5, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                url = 'node-api/trade/assess/gpsFlow';\n                headers = getHeaders2();\n                _context2.prev = 2;\n                _context2.next = 5;\n                return axios.post(url, {\n                  longitude: params.longitude,\n                  latitude: params.latitude,\n                  is_agree: 1,\n                  os: isIOS() ? 'ios' : 'android'\n                }, {\n                  headers: headers\n                });\n\n              case 5:\n                _ref5 = _context2.sent;\n                data = _ref5.data;\n\n                if (data.errorMsg) {\n                  _Toast.info(data.errorMsg);\n                } else {\n                  window.location.reload();\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](2);\n                tools.ErrorLog(_context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 10]]);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var sendTongDun = function sendTongDun(params) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(_) {\n        var url, headers, _ref7, data;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                url = 'node-api/trade/assess/tongdundata';\n                headers = getHeaders2();\n                _context3.prev = 2;\n                _context3.next = 5;\n                return axios.post(url, {\n                  black_box: params.black_box,\n                  platform: params.params\n                }, {\n                  headers: headers\n                });\n\n              case 5:\n                _ref7 = _context3.sent;\n                data = _ref7.data;\n\n                if (data.errorMsg) {\n                  _Toast.info(data.errorMsg);\n                } else {\n                  // window.location.reload()\n                  console.log(data);\n                }\n\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](2);\n                tools.ErrorLog(_context3.t0);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[2, 10]]);\n      }));\n\n      return function (_x3) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/viser/mobile-next/src/actions/myTrade/assess/list.ts"],"names":["getHeaders2","FETCH_TRADE_ASSESS_LIST_INFO","createAction","isIOS","axios","tools","receiveInfo","getCreditEntrydata","query","req","dispatch","url","headers","get","params","data","ErrorLog","sendGPSFlow","_","post","longitude","latitude","is_agree","os","errorMsg","info","window","location","reload","sendTongDun","black_box","platform","console","log"],"mappings":"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","sourcesContent":["import { getHeaders2 } from 'actions/actionHelper'\nimport { Toast } from 'antd-mobile'\nimport { FETCH_TRADE_ASSESS_LIST_INFO } from 'constant/index'\nimport { GetCreditEntrydata } from 'interfaces/mytrade/assess/list'\nimport { ClientRequest } from 'interfaces/router'\nimport { Action, Dispatch } from 'redux'\nimport { createAction } from 'redux-actions'\nimport { isIOS } from 'utils/app'\nimport { axios, tools } from 'utils/index'\n\nconst receiveInfo = createAction<GetCreditEntrydata>(FETCH_TRADE_ASSESS_LIST_INFO)\n\nexport const getCreditEntrydata = ({ query, req }: ClientRequest) => async (dispatch: Dispatch<Action>) => {\n  // const url = 'node-api/trade/creditevaluation'\n  const url = 'mock/mytrade/assess/list'\n  const headers = getHeaders2(req)\n  try {\n    const { data } = await axios.get<GetCreditEntrydata>(url, { params: query, headers })\n    data && dispatch(receiveInfo(data))\n    return data\n  } catch (err) {\n    tools.ErrorLog(err)\n  }\n}\n\nexport const sendGPSFlow = (params: any) => async (_: Dispatch<Action>) => {\n  const url = 'node-api/trade/assess/gpsFlow'\n  const headers = getHeaders2()\n  try {\n    const { data } = await axios.post<any>(\n      url,\n      {\n        longitude: params.longitude,\n        latitude: params.latitude,\n        is_agree: 1,\n        os: isIOS() ? 'ios' : 'android',\n      },\n      { headers },\n    )\n    if (data.errorMsg) {\n      Toast.info(data.errorMsg)\n    } else {\n      window.location.reload()\n    }\n  } catch (err) {\n    tools.ErrorLog(err)\n  }\n}\n\nexport const sendTongDun = (params: any) => async (_: Dispatch<Action>) => {\n  const url = 'node-api/trade/assess/tongdundata'\n  const headers = getHeaders2()\n  try {\n    const { data } = await axios.post<any>(\n      url,\n      {\n        black_box : params.black_box,\n        platform : params.params\n      },\n      { headers },\n    )\n    if (data.errorMsg) {\n      Toast.info(data.errorMsg)\n    } else {\n      // window.location.reload()\n      console.log(data)\n    }\n  } catch (err) {\n    tools.ErrorLog(err)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}