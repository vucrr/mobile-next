{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nimport { GET_CACHE_LIST, REMOVE_ALL_CACHE, REMOVE_CACHE } from 'constant/index';\nimport { fromJS } from 'immutable';\nimport { handleActions } from 'redux-actions';\nvar initialCacheList = {\n  list: []\n};\nvar cacheList = handleActions((_handleActions = {}, _defineProperty(_handleActions, GET_CACHE_LIST, function (state, _ref) {\n  var list = _ref.payload.list;\n  return state.set('list', fromJS(list));\n}), _defineProperty(_handleActions, REMOVE_CACHE, function (state, _ref2) {\n  var index = _ref2.payload.index;\n  return state.deleteIn(['list', fromJS(index)]);\n}), _defineProperty(_handleActions, REMOVE_ALL_CACHE, function (state) {\n  return state.set('list', fromJS([]));\n}), _handleActions), fromJS(initialCacheList));\nexport default cacheList;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/reducers/cache-list.ts"],"names":["GET_CACHE_LIST","REMOVE_ALL_CACHE","REMOVE_CACHE","fromJS","handleActions","initialCacheList","list","cacheList","state","payload","set","index","deleteIn"],"mappings":";;;;AAAA,SAASA,cAAT,EAAyBC,gBAAzB,EAA2CC,YAA3C,QAA+D,gBAA/D;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,aAAT,QAA8B,eAA9B;AAMA,IAAMC,gBAAsC,GAAG;AAC7CC,EAAAA,IAAI,EAAE;AADuC,CAA/C;AAIA,IAAMC,SAAS,GAAGH,aAAa,uDAE1BJ,cAF0B,YAEVQ,KAFU,QAEoB;AAAA,MAAVF,IAAU,QAArBG,OAAqB,CAAVH,IAAU;AAC7C,SAAOE,KAAK,CAACE,GAAN,CAAU,MAAV,EAAkBP,MAAM,CAACG,IAAD,CAAxB,CAAP;AACD,CAJ0B,mCAK1BJ,YAL0B,YAKZM,KALY,SAKmB;AAAA,MAAXG,KAAW,SAAtBF,OAAsB,CAAXE,KAAW;AAC5C,SAAOH,KAAK,CAACI,QAAN,CAAe,CAAC,MAAD,EAAST,MAAM,CAACQ,KAAD,CAAf,CAAf,CAAP;AACD,CAP0B,mCAQ1BV,gBAR0B,YAQRO,KARQ,EAQD;AACxB,SAAOA,KAAK,CAACE,GAAN,CAAU,MAAV,EAAkBP,MAAM,CAAC,EAAD,CAAxB,CAAP;AACD,CAV0B,oBAY7BA,MAAM,CAACE,gBAAD,CAZuB,CAA/B;AAeA,eAAeE,SAAf","sourcesContent":["import { GET_CACHE_LIST, REMOVE_ALL_CACHE, REMOVE_CACHE } from 'constant/index'\nimport { fromJS } from 'immutable'\nimport { handleActions } from 'redux-actions'\n\ninterface InitCacheListPayload {\n  list: string[]\n}\n\nconst initialCacheList: InitCacheListPayload = {\n  list: [],\n}\n\nconst cacheList = handleActions(\n  {\n    [GET_CACHE_LIST](state, { payload: { list } }) {\n      return state.set('list', fromJS(list))\n    },\n    [REMOVE_CACHE](state, { payload: { index } }) {\n      return state.deleteIn(['list', fromJS(index)])\n    },\n    [REMOVE_ALL_CACHE](state) {\n      return state.set('list', fromJS([]))\n    },\n  },\n  fromJS(initialCacheList),\n)\n\nexport default cacheList\n"]},"metadata":{},"sourceType":"module"}