{"ast":null,"code":"import _Flex from \"antd-mobile/lib/flex\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { LazyImage, Link, Swiper } from 'components';\nimport { TrackEventHome } from 'configs/trackEventLabels';\nimport React from 'react';\nimport { convertIndexToDigital } from 'utils/tools';\nimport styles from \"./ActivityList.less\";\n\nvar ActivityList = function ActivityList(_ref) {\n  var title = _ref.title,\n      list = _ref.list;\n\n  if (!list) {\n    return null;\n  }\n\n  var swiperProps = {\n    className: styles.swiper_box,\n    slidesPerView: 2.4726,\n    spaceBetween: 10,\n    freeMode: true,\n    dots: false\n  };\n\n  var getBgImage = function getBgImage(url) {\n    return {\n      background: \"url(\".concat(url, \") top center no-repeat\"),\n      backgroundSize: 'contain'\n    };\n  };\n\n  return React.createElement(\"div\", {\n    className: styles.pro_box\n  }, React.createElement(\"h1\", null, title), list.map(function (info, key) {\n    return React.createElement(\"div\", {\n      key: key,\n      className: styles.list,\n      style: _objectSpread({}, getBgImage(info.get('header_img')))\n    }, React.createElement(Swiper, swiperProps, info.get('products').map(function (item, ikey) {\n      var trackEvent = {\n        label: \"\".concat(TrackEventHome.ActivityList.Topic + convertIndexToDigital(key), \"\\t\").concat(item.get('product_id')),\n        category: TrackEventHome.Category\n      };\n      return React.createElement(Link, {\n        to: \"/product/detail?id_activity=\".concat(item.get('product_id')),\n        className: styles.item,\n        key: ikey,\n        trackEvent: trackEvent\n      }, React.createElement(_Flex, {\n        className: styles.thumb,\n        justify: \"center\"\n      }, React.createElement(LazyImage, {\n        key: key,\n        src: item.get('image')\n      }), item.get('tag') && React.createElement(\"p\", null, item.get('tag'))), React.createElement(\"div\", {\n        className: styles.text_box\n      }, React.createElement(\"h5\", null, item.get('name')), React.createElement(_Flex, {\n        className: styles.badge_box,\n        align: \"start\",\n        wrap: \"wrap\"\n      }, item.get('property_tags').map(function (tag, key) {\n        return React.createElement(\"span\", {\n          key: key\n        }, tag);\n      })), React.createElement(\"p\", {\n        className: styles.price\n      }, \"\\xA5\", item.get('price'), React.createElement(\"span\", {\n        className: styles.union\n      }, item.get('price_unit')), item.get('base_fee') > item.get('price') && React.createElement(\"span\", {\n        className: styles.line\n      }, \"\\uFFE5\", item.get('base_fee')))));\n    })));\n  }));\n};\n\nexport default ActivityList;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/containers/Home/ActivityList.tsx"],"names":["LazyImage","Link","Swiper","TrackEventHome","React","convertIndexToDigital","styles","ActivityList","title","list","swiperProps","className","swiper_box","slidesPerView","spaceBetween","freeMode","dots","getBgImage","url","background","backgroundSize","pro_box","map","info","key","get","item","ikey","trackEvent","label","Topic","category","Category","thumb","text_box","badge_box","tag","price","union","line"],"mappings":"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","sourcesContent":["import { Flex } from 'antd-mobile'\nimport { LazyImage, Link, Swiper } from 'components'\nimport { TrackEventHome } from 'configs/trackEventLabels'\nimport React from 'react'\nimport { convertIndexToDigital } from 'utils/tools'\nimport styles from './ActivityList.less'\n\nexport interface ActivityListProps {\n  title: string\n  list: any\n}\n\nconst ActivityList: React.FunctionComponent<ActivityListProps> = ({ title, list }) => {\n  if (!list) {\n    return null\n  }\n\n  const swiperProps = {\n    className: styles.swiper_box,\n    slidesPerView: 2.4726,\n    spaceBetween: 10,\n    freeMode: true,\n    dots: false,\n  }\n\n  const getBgImage = (url: string) => {\n    return {\n      background: `url(${url}) top center no-repeat`,\n      backgroundSize: 'contain',\n    }\n  }\n\n  return (\n    <div className={styles.pro_box}>\n      <h1>{title}</h1>\n      {list.map((info: any, key: number) => (\n        <div key={key} className={styles.list} style={{ ...getBgImage(info.get('header_img')) }}>\n          <Swiper {...swiperProps}>\n            {info.get('products').map((item: any, ikey: number) => {\n              const trackEvent = {\n                label: `${TrackEventHome.ActivityList.Topic + convertIndexToDigital(key)}\\t${item.get('product_id')}`,\n                category: TrackEventHome.Category,\n              }\n              return (\n                <Link\n                  to={`/product/detail?id_activity=${item.get('product_id')}`}\n                  className={styles.item}\n                  key={ikey}\n                  trackEvent={trackEvent}\n                >\n                  <Flex className={styles.thumb} justify=\"center\">\n                    <LazyImage key={key} src={item.get('image')} />\n                    {item.get('tag') && <p>{item.get('tag')}</p>}\n                  </Flex>\n                  <div className={styles.text_box}>\n                    <h5>{item.get('name')}</h5>\n                    <Flex className={styles.badge_box} align=\"start\" wrap=\"wrap\">\n                      {item.get('property_tags').map((tag: any, key: number) => <span key={key}>{tag}</span>)}\n                    </Flex>\n                    <p className={styles.price}>\n                      ¥{item.get('price')}\n                      <span className={styles.union}>{item.get('price_unit')}</span>\n                      {item.get('base_fee') > item.get('price') && (\n                        <span className={styles.line}>￥{item.get('base_fee')}</span>\n                      )}\n                    </p>\n                  </div>\n                </Link>\n              )\n            })}\n          </Swiper>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ActivityList\n"]},"metadata":{},"sourceType":"module"}