{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { checkLogin, redirectLogin, redirectTo } from 'actions/app';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Header, TabBar } from 'components';\nimport Error from 'containers/Error';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport { centerActions } from 'actions/account/center';\nimport { cleanUserInfo } from 'utils/tools';\nimport Top from \"./Top\";\nimport NavList from \"./NavList\";\nimport RecommendList from \"./RecommendList\";\n\nvar Center =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Center, _React$Component);\n\n  function Center() {\n    _classCallCheck(this, Center);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Center).apply(this, arguments));\n  }\n\n  _createClass(Center, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var error = this.props.error;\n\n      if (error && error.status === 501) {\n        cleanUserInfo();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          error = _this$props.error,\n          utm = _this$props.utm;\n\n      if (error) {\n        return React.createElement(Error, {\n          statusCode: error.status,\n          errorMsg: error.errorMsg\n        });\n      }\n\n      var center = this.props.center;\n      var containerProps = {\n        renderHeader: React.createElement(Header, {\n          hidden: true\n        }, \"\\u4E2A\\u4EBA\\u4E2D\\u5FC3\"),\n        renderTabBar: React.createElement(TabBar, {\n          selectedTab: \"myCenter\"\n        }),\n        fixedTabBar: true\n      };\n      var showRecommendList = !utm.get('isCmblife') && !utm.get('isDxsh');\n      return React.createElement(Container, containerProps, React.createElement(Top, {\n        userInfo: center.get('userInfo')\n      }), React.createElement(NavList, {\n        showCredit: center.getIn(['userInfo', 'show_credit_entry']),\n        tradeCount: center.get('tradeCount')\n      }), showRecommendList && React.createElement(RecommendList, {\n        list: center.get('mpActivityInfo')\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var store, query, isServer, res, asPath, req, isLogin, data, path;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref.store, query = _ref.query, isServer = _ref.isServer, res = _ref.res, asPath = _ref.asPath, req = _ref.req;\n                _context.next = 3;\n                return store.dispatch(checkLogin({\n                  isServer: isServer,\n                  res: res,\n                  asPath: asPath,\n                  req: req\n                }));\n\n              case 3:\n                isLogin = _context.sent;\n\n                if (!isLogin) {\n                  _context.next = 21;\n                  break;\n                }\n\n                _context.next = 7;\n                return store.dispatch(centerActions({\n                  query: query,\n                  req: req\n                }));\n\n              case 7:\n                data = _context.sent;\n\n                if (!data.status) {\n                  _context.next = 21;\n                  break;\n                }\n\n                if (!(data.status === 401)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 12;\n                return redirectLogin({\n                  isServer: isServer,\n                  res: res,\n                  asPath: asPath\n                });\n\n              case 12:\n                _context.next = 21;\n                break;\n\n              case 14:\n                if (!(data.status === 301)) {\n                  _context.next = 20;\n                  break;\n                }\n\n                // 支付宝新用户，需要绑定手机号\n                path = '/account/choosephone?redirect_url=%2Faccount%2Fcenter';\n                _context.next = 18;\n                return redirectTo({\n                  isServer: isServer,\n                  res: res,\n                  path: path\n                });\n\n              case 18:\n                _context.next = 21;\n                break;\n\n              case 20:\n                return _context.abrupt(\"return\", {\n                  error: data\n                });\n\n              case 21:\n                return _context.abrupt(\"return\", false);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Center;\n}(React.Component);\n\n_defineProperty(Center, \"propTypes\", {\n  center: PropTypes.instanceOf(Immutable.Map).isRequired,\n  error: PropTypes.object,\n  utm: PropTypes.object\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    center: state.getIn(['account', 'center']),\n    utm: state.getIn(['serverApp', 'utm'])\n  };\n}; // const mapDispatchToProps = (dispatch) => ({\n//   onHomeActions: bindActionCreators(centerActions, dispatch),\n// })\n\n\nexport default connect(mapStateToProps)(Center);","map":{"version":3,"sources":["/Users/viser/mobile-next/src/containers/Account/Center/index.js"],"names":["checkLogin","redirectLogin","redirectTo","React","connect","Container","Header","TabBar","Error","PropTypes","Immutable","centerActions","cleanUserInfo","Top","NavList","RecommendList","Center","error","props","status","utm","errorMsg","center","containerProps","renderHeader","renderTabBar","fixedTabBar","showRecommendList","get","getIn","store","query","isServer","res","asPath","req","dispatch","isLogin","data","path","Component","instanceOf","Map","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,UAApC,QAAsD,aAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,QAA0C,YAA1C;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAOC,GAAP;AACA,OAAOC,OAAP;AACA,OAAOC,aAAP;;IAEMC,M;;;;;;;;;;;;;wCA0BgB;AAAA,UACVC,KADU,GACA,KAAKC,KADL,CACVD,KADU;;AAElB,UAAIA,KAAK,IAAIA,KAAK,CAACE,MAAN,KAAiB,GAA9B,EAAmC;AACjCP,QAAAA,aAAa;AACd;AACF;;;6BAEQ;AAAA,wBACgB,KAAKM,KADrB;AAAA,UACCD,KADD,eACCA,KADD;AAAA,UACQG,GADR,eACQA,GADR;;AAEP,UAAIH,KAAJ,EAAW;AACT,eAAO,oBAAC,KAAD;AAAO,UAAA,UAAU,EAAEA,KAAK,CAACE,MAAzB;AAAiC,UAAA,QAAQ,EAAEF,KAAK,CAACI;AAAjD,UAAP;AACD;;AAED,UAAMC,MAAM,GAAG,KAAKJ,KAAL,CAAWI,MAA1B;AACA,UAAMC,cAAc,GAAG;AACrBC,QAAAA,YAAY,EAAE,oBAAC,MAAD;AAAQ,UAAA,MAAM;AAAd,sCADO;AAErBC,QAAAA,YAAY,EAAE,oBAAC,MAAD;AAAQ,UAAA,WAAW,EAAC;AAApB,UAFO;AAGrBC,QAAAA,WAAW,EAAE;AAHQ,OAAvB;AAKA,UAAMC,iBAAiB,GAAG,CAACP,GAAG,CAACQ,GAAJ,CAAQ,WAAR,CAAD,IAAyB,CAACR,GAAG,CAACQ,GAAJ,CAAQ,QAAR,CAApD;AAEA,aACE,oBAAC,SAAD,EAAeL,cAAf,EACE,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAED,MAAM,CAACM,GAAP,CAAW,UAAX;AAAf,QADF,EAEE,oBAAC,OAAD;AAAS,QAAA,UAAU,EAAEN,MAAM,CAACO,KAAP,CAAa,CAAC,UAAD,EAAa,mBAAb,CAAb,CAArB;AAAsE,QAAA,UAAU,EAAEP,MAAM,CAACM,GAAP,CAAW,YAAX;AAAlF,QAFF,EAGGD,iBAAiB,IAAI,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAEL,MAAM,CAACM,GAAP,CAAW,gBAAX;AAArB,QAHxB,CADF;AAOD;;;;;;;;;;;;AA/C8BE,gBAAAA,K,QAAAA,K,EAAOC,K,QAAAA,K,EAAOC,Q,QAAAA,Q,EAAUC,G,QAAAA,G,EAAKC,M,QAAAA,M,EAAQC,G,QAAAA,G;;uBAC5CL,KAAK,CAACM,QAAN,CAAepC,UAAU,CAAC;AAAEgC,kBAAAA,QAAQ,EAARA,QAAF;AAAYC,kBAAAA,GAAG,EAAHA,GAAZ;AAAiBC,kBAAAA,MAAM,EAANA,MAAjB;AAAyBC,kBAAAA,GAAG,EAAHA;AAAzB,iBAAD,CAAzB,C;;;AAAhBE,gBAAAA,O;;qBACFA,O;;;;;;uBACiBP,KAAK,CAACM,QAAN,CAAezB,aAAa,CAAC;AAAEoB,kBAAAA,KAAK,EAALA,KAAF;AAASI,kBAAAA,GAAG,EAAHA;AAAT,iBAAD,CAA5B,C;;;AAAbG,gBAAAA,I;;qBACFA,IAAI,CAACnB,M;;;;;sBACHmB,IAAI,CAACnB,MAAL,KAAgB,G;;;;;;uBACZlB,aAAa,CAAC;AAAE+B,kBAAAA,QAAQ,EAARA,QAAF;AAAYC,kBAAAA,GAAG,EAAHA,GAAZ;AAAiBC,kBAAAA,MAAM,EAANA;AAAjB,iBAAD,C;;;;;;;sBACVI,IAAI,CAACnB,MAAL,KAAgB,G;;;;;AACzB;AACMoB,gBAAAA,I,GAAO,uD;;uBACPrC,UAAU,CAAC;AAAE8B,kBAAAA,QAAQ,EAARA,QAAF;AAAYC,kBAAAA,GAAG,EAAHA,GAAZ;AAAiBM,kBAAAA,IAAI,EAAJA;AAAjB,iBAAD,C;;;;;;;iDAET;AAAEtB,kBAAAA,KAAK,EAAEqB;AAAT,iB;;;iDAIN,K;;;;;;;;;;;;;;;;;;;EAvBUnC,KAAK,CAACqC,S;;gBAArBxB,M,eACe;AACjBM,EAAAA,MAAM,EAAEb,SAAS,CAACgC,UAAV,CAAqB/B,SAAS,CAACgC,GAA/B,EAAoCC,UAD3B;AAEjB1B,EAAAA,KAAK,EAAER,SAAS,CAACmC,MAFA;AAGjBxB,EAAAA,GAAG,EAAEX,SAAS,CAACmC;AAHE,C;;AAwDrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCxB,IAAAA,MAAM,EAAEwB,KAAK,CAACjB,KAAN,CAAY,CAAC,SAAD,EAAY,QAAZ,CAAZ,CADwB;AAEhCT,IAAAA,GAAG,EAAE0B,KAAK,CAACjB,KAAN,CAAY,CAAC,WAAD,EAAc,KAAd,CAAZ;AAF2B,GAAL;AAAA,CAA7B,C,CAKA;AACA;AACA;;;AACA,eAAezB,OAAO,CAACyC,eAAD,CAAP,CAAyB7B,MAAzB,CAAf","sourcesContent":["import { checkLogin, redirectLogin, redirectTo } from 'actions/app'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Header, TabBar } from 'components'\nimport Error from 'containers/Error'\nimport PropTypes from 'prop-types'\nimport Immutable from 'immutable'\nimport { centerActions } from 'actions/account/center'\nimport { cleanUserInfo } from 'utils/tools'\nimport Top from './Top'\nimport NavList from './NavList'\nimport RecommendList from './RecommendList'\n\nclass Center extends React.Component {\n  static propTypes = {\n    center: PropTypes.instanceOf(Immutable.Map).isRequired,\n    error: PropTypes.object,\n    utm: PropTypes.object,\n  }\n\n  static async getInitialProps({ store, query, isServer, res, asPath, req }) {\n    const isLogin = await store.dispatch(checkLogin({ isServer, res, asPath, req }))\n    if (isLogin) {\n      const data = await store.dispatch(centerActions({ query, req }))\n      if (data.status) {\n        if (data.status === 401) {\n          await redirectLogin({ isServer, res, asPath })\n        } else if (data.status === 301) {\n          // 支付宝新用户，需要绑定手机号\n          const path = '/account/choosephone?redirect_url=%2Faccount%2Fcenter'\n          await redirectTo({ isServer, res, path })\n        } else {\n          return { error: data }\n        }\n      }\n    }\n    return false\n  }\n\n  componentDidMount() {\n    const { error } = this.props\n    if (error && error.status === 501) {\n      cleanUserInfo()\n    }\n  }\n\n  render() {\n    const { error, utm } = this.props\n    if (error) {\n      return <Error statusCode={error.status} errorMsg={error.errorMsg} />\n    }\n\n    const center = this.props.center\n    const containerProps = {\n      renderHeader: <Header hidden>个人中心</Header>,\n      renderTabBar: <TabBar selectedTab=\"myCenter\" />,\n      fixedTabBar: true,\n    }\n    const showRecommendList = !utm.get('isCmblife') && !utm.get('isDxsh')\n\n    return (\n      <Container {...containerProps}>\n        <Top userInfo={center.get('userInfo')} />\n        <NavList showCredit={center.getIn(['userInfo', 'show_credit_entry'])} tradeCount={center.get('tradeCount')} />\n        {showRecommendList && <RecommendList list={center.get('mpActivityInfo')} />}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  center: state.getIn(['account', 'center']),\n  utm: state.getIn(['serverApp', 'utm']),\n})\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onHomeActions: bindActionCreators(centerActions, dispatch),\n// })\nexport default connect(mapStateToProps)(Center)\n"]},"metadata":{},"sourceType":"module"}