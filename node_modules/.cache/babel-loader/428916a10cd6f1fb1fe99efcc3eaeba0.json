{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport classnames from 'classnames';\nimport { Icon } from 'components';\nimport { TrackEventHome } from 'configs/trackEventLabels';\nimport Cookies from 'js-cookie';\nimport React from 'react';\nimport { trackClickEvent } from 'utils/piwik';\nimport styles from \"./AdvertModal.less\";\n\nvar AdvertModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdvertModal, _React$Component);\n\n  function AdvertModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AdvertModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AdvertModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      show: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      trackClickEvent({\n        category: TrackEventHome.Category,\n        label: TrackEventHome.AdvertModal.Close\n      });\n\n      _this.setState({\n        show: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"track\", function () {\n      trackClickEvent({\n        category: TrackEventHome.Category,\n        label: TrackEventHome.AdvertModal.Redirect\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(AdvertModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var popup = this.props.popup;\n      var curPopupId = popup.get('id').toString();\n      var popupId = Cookies.get('popupId');\n\n      if (!popupId || popupId && popupId !== curPopupId) {\n        this.handleShow();\n        Cookies.set('popupId', curPopupId, {\n          expires: 365\n        });\n      }\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var popup = this.props.popup;\n      var show = this.state.show;\n      return React.createElement(\"div\", {\n        className: classnames(styles.modal_box, show && styles.show)\n      }, React.createElement(\"a\", {\n        href: popup.get('redirect_url'),\n        onClick: this.track\n      }, React.createElement(\"img\", {\n        src: popup.get('img')\n      })), React.createElement(\"span\", {\n        onClick: this.handleClose\n      }, React.createElement(Icon, {\n        className: styles.btn_close,\n        type: require('svg/close.svg')\n      })));\n    }\n  }]);\n\n  return AdvertModal;\n}(React.Component);\n\nexport default AdvertModal;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/containers/Home/AdvertModal.tsx"],"names":["classnames","Icon","TrackEventHome","Cookies","React","trackClickEvent","styles","AdvertModal","show","category","Category","label","Close","setState","Redirect","popup","props","curPopupId","get","toString","popupId","handleShow","set","expires","state","modal_box","track","handleClose","btn_close","require","Component"],"mappings":";;;;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,OAAOC,MAAP;;IAMMC,W;;;;;;;;;;;;;;;;;;4DACa;AACfC,MAAAA,IAAI,EAAE;AADS,K;;kEAkBH,YAAM;AAClBH,MAAAA,eAAe,CAAC;AAAEI,QAAAA,QAAQ,EAAEP,cAAc,CAACQ,QAA3B;AAAqCC,QAAAA,KAAK,EAAET,cAAc,CAACK,WAAf,CAA2BK;AAAvE,OAAD,CAAf;;AACA,YAAKC,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,K;;4DAEO,YAAM;AACZH,MAAAA,eAAe,CAAC;AAAEI,QAAAA,QAAQ,EAAEP,cAAc,CAACQ,QAA3B;AAAqCC,QAAAA,KAAK,EAAET,cAAc,CAACK,WAAf,CAA2BO;AAAvE,OAAD,CAAf;AACD,K;;;;;;;wCArBmB;AAAA,UACVC,KADU,GACA,KAAKC,KADL,CACVD,KADU;AAElB,UAAME,UAAU,GAAGF,KAAK,CAACG,GAAN,CAAU,IAAV,EAAgBC,QAAhB,EAAnB;AACA,UAAMC,OAAO,GAAGjB,OAAO,CAACe,GAAR,CAAY,SAAZ,CAAhB;;AACA,UAAI,CAACE,OAAD,IAAaA,OAAO,IAAIA,OAAO,KAAKH,UAAxC,EAAqD;AACnD,aAAKI,UAAL;AACAlB,QAAAA,OAAO,CAACmB,GAAR,CAAY,SAAZ,EAAuBL,UAAvB,EAAmC;AAAEM,UAAAA,OAAO,EAAE;AAAX,SAAnC;AACD;AACF;;;iCAEY;AACX,WAAKV,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;;;6BAWQ;AAAA,UACCO,KADD,GACW,KAAKC,KADhB,CACCD,KADD;AAAA,UAECP,IAFD,GAEU,KAAKgB,KAFf,CAEChB,IAFD;AAIP,aACE;AAAK,QAAA,SAAS,EAAER,UAAU,CAACM,MAAM,CAACmB,SAAR,EAAmBjB,IAAI,IAAIF,MAAM,CAACE,IAAlC;AAA1B,SACE;AAAG,QAAA,IAAI,EAAEO,KAAK,CAACG,GAAN,CAAU,cAAV,CAAT;AAAoC,QAAA,OAAO,EAAE,KAAKQ;AAAlD,SACE;AAAK,QAAA,GAAG,EAAEX,KAAK,CAACG,GAAN,CAAU,KAAV;AAAV,QADF,CADF,EAIE;AAAM,QAAA,OAAO,EAAE,KAAKS;AAApB,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAErB,MAAM,CAACsB,SAAxB;AAAmC,QAAA,IAAI,EAAEC,OAAO,CAAC,eAAD;AAAhD,QADF,CAJF,CADF;AAUD;;;;EA1CuBzB,KAAK,CAAC0B,S;;AA6ChC,eAAevB,WAAf","sourcesContent":["import classnames from 'classnames'\nimport { Icon } from 'components'\nimport { TrackEventHome } from 'configs/trackEventLabels'\nimport Cookies from 'js-cookie'\nimport React from 'react'\nimport { trackClickEvent } from 'utils/piwik'\nimport styles from './AdvertModal.less'\n\ninterface AdvertModalProps {\n  popup: any\n}\n\nclass AdvertModal extends React.Component<AdvertModalProps, { show: boolean }> {\n  readonly state = {\n    show: false,\n  }\n\n  componentDidMount() {\n    const { popup } = this.props\n    const curPopupId = popup.get('id').toString()\n    const popupId = Cookies.get('popupId')\n    if (!popupId || (popupId && popupId !== curPopupId)) {\n      this.handleShow()\n      Cookies.set('popupId', curPopupId, { expires: 365 })\n    }\n  }\n\n  handleShow() {\n    this.setState({ show: true })\n  }\n\n  handleClose = () => {\n    trackClickEvent({ category: TrackEventHome.Category, label: TrackEventHome.AdvertModal.Close })\n    this.setState({ show: false })\n  }\n\n  track = () => {\n    trackClickEvent({ category: TrackEventHome.Category, label: TrackEventHome.AdvertModal.Redirect })\n  }\n\n  render() {\n    const { popup } = this.props\n    const { show } = this.state\n\n    return (\n      <div className={classnames(styles.modal_box, show && styles.show)}>\n        <a href={popup.get('redirect_url')} onClick={this.track}>\n          <img src={popup.get('img')} />\n        </a>\n        <span onClick={this.handleClose}>\n          <Icon className={styles.btn_close} type={require('svg/close.svg')} />\n        </span>\n      </div>\n    )\n  }\n}\n\nexport default AdvertModal\n"]},"metadata":{},"sourceType":"module"}