{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { Container, Header, TabBar } from 'components';\nimport Error from 'containers/Error';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CreditTips from \"./CreditTips\";\nimport InfoList from \"./InfoList\";\nimport { getCreditEntrydata } from 'actions/myTrade/assess/list';\n\nvar CreditEvaluation = function CreditEvaluation(_ref) {\n  var error = _ref.error,\n      assessList = _ref.assessList;\n\n  if (error) {\n    return React.createElement(Error, {\n      statusCode: error.status,\n      errorMsg: error.errorMsg\n    });\n  }\n\n  var containerProps = {\n    renderHeader: React.createElement(Header, null, \"\\u4FE1\\u7528\\u8BC4\\u4F30\\u786E\\u8BA43\"),\n    renderTabBar: React.createElement(TabBar, {\n      hidden: true\n    }),\n    bgColor: '#ffffff'\n  };\n  return React.createElement(Container, containerProps, React.createElement(CreditTips, null), React.createElement(InfoList, null));\n};\n\nCreditEvaluation.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref2) {\n    var store, query, req, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            store = _ref2.store, query = _ref2.query, req = _ref2.req;\n            _context.next = 3;\n            return store.dispatch(getCreditEntrydata({\n              query: query,\n              req: req\n            }));\n\n          case 3:\n            data = _context.sent;\n            console.log(data, '[data]'); // if (data.status) {\n            //   return { error: data }\n            // }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    creditData: state.getIn(['account', 'unionPay', 'detail'])\n  };\n};\n\nexport default connect(mapStateToProps)(CreditEvaluation);","map":{"version":3,"sources":["/Users/viser/mobile-next/src/containers/MyTrade/Assess/List/index.tsx"],"names":["Container","Header","TabBar","Error","React","connect","CreditTips","InfoList","getCreditEntrydata","CreditEvaluation","error","assessList","status","errorMsg","containerProps","renderHeader","renderTabBar","bgColor","getInitialProps","store","query","req","dispatch","data","console","log","mapStateToProps","state","creditData","getIn"],"mappings":";;AACA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,QAA0C,YAA1C;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AACA,SAASC,kBAAT,QAAmC,6BAAnC;;AAOA,IAAMC,gBAAiD,GAAG,SAApDA,gBAAoD,OAAkD;AAAA,MAA/CC,KAA+C,QAA/CA,KAA+C;AAAA,MAAxCC,UAAwC,QAAxCA,UAAwC;;AAC1G,MAAID,KAAJ,EAAW;AACT,WAAO,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAEA,KAAK,CAACE,MAAzB;AAAiC,MAAA,QAAQ,EAAEF,KAAK,CAACG;AAAjD,MAAP;AACD;;AAED,MAAMC,cAAc,GAAG;AACrBC,IAAAA,YAAY,EAAE,oBAAC,MAAD,gDADO;AAErBC,IAAAA,YAAY,EAAE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE;AAAhB,MAFO;AAGrBC,IAAAA,OAAO,EAAC;AAHa,GAAvB;AAMA,SACE,oBAAC,SAAD,EAAeH,cAAf,EACI,oBAAC,UAAD,OADJ,EAEI,oBAAC,QAAD,OAFJ,CADF;AAMD,CAjBD;;AAmBAL,gBAAgB,CAACS,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,SAASA,KAAT,EAAgBC,KAAhB,SAAgBA,KAAhB,EAAwBC,GAAxB,SAAwBA,GAAxB;AAAA;AAAA,mBACZF,KAAK,CAACG,QAAN,CAAed,kBAAkB,CAAC;AAAEY,cAAAA,KAAK,EAALA,KAAF;AAASC,cAAAA,GAAG,EAAHA;AAAT,aAAD,CAAjC,CADY;;AAAA;AACzBE,YAAAA,IADyB;AAE/BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,QAAlB,EAF+B,CAG/B;AACA;AACA;;AAL+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AAQA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAiB;AACvCC,IAAAA,UAAU,EAAED,KAAK,CAACE,KAAN,CAAY,CAAC,SAAD,EAAY,UAAZ,EAAwB,QAAxB,CAAZ;AAD2B,GAAjB;AAAA,CAAxB;;AAIA,eAAexB,OAAO,CAACqB,eAAD,CAAP,CAAyBjB,gBAAzB,CAAf","sourcesContent":["import { GetInitialPropsContext, NextSFC2 } from '@@types/next'\nimport { Container, Header, TabBar } from 'components'\nimport Error from 'containers/Error'\nimport { ErrorObject } from 'interfaces/error'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport CreditTips from './CreditTips'\nimport InfoList from './InfoList'\nimport { getCreditEntrydata } from 'actions/myTrade/assess/list';\n\n\ninterface CreditEvaluationProps extends ErrorObject {\n  assessList : any\n}\n\nconst CreditEvaluation: NextSFC2<CreditEvaluationProps> = ({ error ,assessList }: CreditEvaluationProps) => {\n  if (error) {\n    return <Error statusCode={error.status} errorMsg={error.errorMsg} />\n  }\n\n  const containerProps = {\n    renderHeader: <Header>信用评估确认3</Header>,\n    renderTabBar: <TabBar hidden={true} />,\n    bgColor:'#ffffff'\n  }\n\n  return (\n    <Container {...containerProps}>\n        <CreditTips />\n        <InfoList />    \n    </Container>\n  )\n}\n\nCreditEvaluation.getInitialProps = async ({ store, query,  req }: GetInitialPropsContext) => {\n    const data = await store.dispatch(getCreditEntrydata({ query, req }))\n    console.log(data, '[data]')\n    // if (data.status) {\n    //   return { error: data }\n    // }\n}\n\nconst mapStateToProps = (state: any) => ({\n  creditData: state.getIn(['account', 'unionPay', 'detail']),\n})\n\nexport default connect(mapStateToProps)(CreditEvaluation)\n"]},"metadata":{},"sourceType":"module"}