{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Flex from \"antd-mobile/lib/flex\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport classnames from 'classnames';\nimport { LazyImage, Link, Swiper } from 'components';\nimport { TrackEventHome } from 'configs/trackEventLabels';\nimport React from 'react';\nimport { convertIndexToDigital, renderLink } from 'utils/tools';\nimport styles from \"./HeaderSwiper.less\";\n\nvar HeaderSwiper = function HeaderSwiper(_ref) {\n  var festival = _ref.festival,\n      brand = _ref.brand,\n      list = _ref.list,\n      brands = _ref.brands;\n  var swiperProps = {\n    autoplay: true,\n    loop: true,\n    className: styles.topSwiper,\n    loopFillGroupWithBlank: true\n  };\n  var isFestival = +festival.get('is_festival') === 1;\n  var bgProps = isFestival ? {\n    background: \"url(\".concat(festival.get('image'), \") top center no-repeat\"),\n    backgroundSize: 'cover'\n  } : {};\n  return React.createElement(\"div\", {\n    className: classnames(styles.container, isFestival && styles.festival)\n  }, festival && React.createElement(\"div\", {\n    className: styles.bg,\n    style: _objectSpread({}, bgProps)\n  }), brand && React.createElement(_Flex, {\n    align: \"end\",\n    className: styles.title\n  }, React.createElement(\"h1\", null, brand.get('name')), React.createElement(\"p\", null, brand.get('positioning'))), list && React.createElement(\"div\", {\n    className: styles.swiper_wrap\n  }, React.createElement(Swiper, _extends({\n    dotPosition: \"right\"\n  }, swiperProps), list.map(function (item, key) {\n    var trackEvent = {\n      label: \"\".concat(TrackEventHome.BannerNav.Carousel + convertIndexToDigital(key), \"\\t\").concat(item.get('image')),\n      category: TrackEventHome.Category\n    };\n    return React.createElement(Link, {\n      className: styles.thumb_box,\n      to: renderLink({\n        item: item\n      }),\n      key: key,\n      trackEvent: trackEvent\n    }, React.createElement(\"img\", {\n      className: styles.thumb,\n      src: item.get('image')\n    }));\n  }))), brands && React.createElement(_Flex, {\n    justify: \"between\",\n    className: styles.tips\n  }, brands.map(function (item, key) {\n    return React.createElement(_Flex, {\n      className: styles.tip,\n      key: key\n    }, React.createElement(LazyImage, {\n      src: item.get('image')\n    }), item.get('text'));\n  })));\n};\n\nexport default HeaderSwiper;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/containers/Home/HeaderSwiper.tsx"],"names":["classnames","LazyImage","Link","Swiper","TrackEventHome","React","convertIndexToDigital","renderLink","styles","HeaderSwiper","festival","brand","list","brands","swiperProps","autoplay","loop","className","topSwiper","loopFillGroupWithBlank","isFestival","get","bgProps","background","backgroundSize","container","bg","title","swiper_wrap","map","item","key","trackEvent","label","BannerNav","Carousel","category","Category","thumb_box","thumb","tips","tip"],"mappings":"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","sourcesContent":["import { Flex } from 'antd-mobile'\nimport classnames from 'classnames'\nimport { LazyImage, Link, Swiper } from 'components'\nimport { TrackEventHome } from 'configs/trackEventLabels'\nimport React from 'react'\nimport { convertIndexToDigital, renderLink } from 'utils/tools'\nimport styles from './HeaderSwiper.less'\n\nexport interface HeaderSwiperProps {\n  festival: any\n  brand: any\n  list: any\n  brands: any\n}\n\nconst HeaderSwiper: React.FunctionComponent<HeaderSwiperProps> = ({ festival, brand, list, brands }) => {\n  const swiperProps = {\n    autoplay: true,\n    loop: true,\n    className: styles.topSwiper,\n    loopFillGroupWithBlank: true,\n  }\n\n  const isFestival = +festival.get('is_festival') === 1\n\n  const bgProps = isFestival\n    ? {\n        background: `url(${festival.get('image')}) top center no-repeat`,\n        backgroundSize: 'cover',\n      }\n    : {}\n\n  return (\n    <div className={classnames(styles.container, isFestival && styles.festival)}>\n      {festival && <div className={styles.bg} style={{ ...bgProps }} />}\n      {brand && (\n        <Flex align=\"end\" className={styles.title}>\n          <h1>{brand.get('name')}</h1>\n          <p>{brand.get('positioning')}</p>\n        </Flex>\n      )}\n      {list && (\n        <div className={styles.swiper_wrap}>\n          <Swiper dotPosition=\"right\" {...swiperProps}>\n            {list.map((item: any, key: number) => {\n              const trackEvent = {\n                label: `${TrackEventHome.BannerNav.Carousel + convertIndexToDigital(key)}\\t${item.get('image')}`,\n                category: TrackEventHome.Category,\n              }\n\n              return (\n                <Link className={styles.thumb_box} to={renderLink({ item })} key={key} trackEvent={trackEvent}>\n                  <img className={styles.thumb} src={item.get('image')} />\n                </Link>\n              )\n            })}\n          </Swiper>\n        </div>\n      )}\n      {brands && (\n        <Flex justify=\"between\" className={styles.tips}>\n          {brands.map((item: any, key: number) => {\n            return (\n              <Flex className={styles.tip} key={key}>\n                <LazyImage src={item.get('image')} />\n                {item.get('text')}\n              </Flex>\n            )\n          })}\n        </Flex>\n      )}\n    </div>\n  )\n}\n\nexport default HeaderSwiper\n"]},"metadata":{},"sourceType":"module"}