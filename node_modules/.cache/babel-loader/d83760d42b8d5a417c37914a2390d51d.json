{"ast":null,"code":"import _Flex from \"antd-mobile/lib/flex\";\nimport _ListView from \"antd-mobile/lib/list-view\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { Icon } from 'components';\nimport React, { Component } from 'react';\nimport styles from \"./ListView.less\";\n\nvar MyListView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyListView, _Component);\n\n  function MyListView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyListView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyListView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isLoading: true,\n      dataSource: new _ListView.DataSource({\n        rowHasChanged: _this.props.rowHasChanged\n      })\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEndReached\", function () {\n      if (_this.state.isLoading || !_this.props.hasMore) {\n        return;\n      }\n\n      if (_this.props.hasMore) {\n        _this.setState({\n          isLoading: true\n        });\n\n        _this.props.queryMoreList();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderFooter\", function () {\n      var isLoading = _this.state.isLoading;\n      var _this$props = _this.props,\n          hasMore = _this$props.hasMore,\n          hasMoreMsg = _this$props.hasMoreMsg;\n\n      if (!hasMoreMsg.length) {\n        return React.createElement(React.Fragment, null);\n      }\n\n      var message = hasMore ? '· 上拉加载更多 ·' : \"\\xB7 \".concat(hasMoreMsg, \" \\xB7\");\n      return React.createElement(_Flex, {\n        className: styles.loading_box,\n        justify: \"center\"\n      }, isLoading ? React.createElement(_Flex, {\n        align: \"center\",\n        justify: \"center\"\n      }, React.createElement(Icon, {\n        className: styles.icon,\n        type: require('svg/spinner.svg')\n      }), \"\\u6B63\\u5728\\u52A0\\u8F7D\\u4E2D...\") : message);\n    });\n\n    return _this;\n  }\n\n  _createClass(MyListView, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(this.props.dataSource),\n        isLoading: false\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.dataSource !== this.props.dataSource) {\n        this.setState({\n          isLoading: false,\n          dataSource: this.state.dataSource.cloneWithRows(nextProps.dataSource)\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          Header = _this$props2.Header,\n          Row = _this$props2.Row,\n          className = _this$props2.className,\n          pageSize = _this$props2.pageSize;\n      var dataSource = this.state.dataSource;\n      return React.createElement(_ListView, {\n        dataSource: dataSource,\n        renderHeader: Header,\n        renderFooter: this.renderFooter,\n        renderRow: Row,\n        className: className,\n        initialListSize: pageSize,\n        pageSize: pageSize,\n        useBodyScroll: true,\n        onEndReached: this.onEndReached,\n        onEndReachedThreshold: 100\n      });\n    }\n  }]);\n\n  return MyListView;\n}(Component);\n\n_defineProperty(MyListView, \"defaultProps\", {\n  pageSize: 10,\n  hasMoreMsg: '没有更多了哦',\n  rowHasChanged: function rowHasChanged(row1, row2) {\n    return row1.id !== row2.id;\n  }\n});\n\nexport default MyListView;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/components/ListView/ListView.tsx"],"names":["Icon","React","Component","styles","MyListView","isLoading","dataSource","DataSource","rowHasChanged","props","state","hasMore","setState","queryMoreList","hasMoreMsg","length","message","loading_box","icon","require","cloneWithRows","nextProps","Header","Row","className","pageSize","renderFooter","onEndReached","row1","row2","id"],"mappings":"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","sourcesContent":["import { Flex, ListView } from 'antd-mobile'\nimport { Icon } from 'components'\nimport React, { Component } from 'react'\nimport styles from './ListView.less'\n\ninterface MyListViewProps {\n  dataSource: any\n  hasMore: boolean\n  hasMoreMsg?: string\n  className: string\n  pageSize?: number\n  rowHasChanged?(row1: any, row2: any): void\n  queryMoreList: Function\n  Header?: () => React.ReactElement<any>\n  Row: (\n    rowData: any,\n    sectionID: string | number,\n    rowID: string | number,\n    highlightRow?: boolean,\n  ) => React.ReactElement<any>\n}\n\ninterface MyListViewState {\n  dataSource: any\n  isLoading: boolean\n}\n\nclass MyListView extends Component<MyListViewProps, MyListViewState> {\n  static defaultProps = {\n    pageSize: 10,\n    hasMoreMsg: '没有更多了哦',\n    rowHasChanged: (row1: any, row2: any) => row1.id !== row2.id,\n  }\n  readonly state = {\n    isLoading: true,\n    dataSource: new ListView.DataSource({\n      rowHasChanged: this.props.rowHasChanged,\n    }),\n  }\n\n  componentWillMount() {\n    this.setState({\n      dataSource: this.state.dataSource.cloneWithRows(this.props.dataSource),\n      isLoading: false,\n    })\n  }\n\n  componentWillReceiveProps(nextProps: MyListViewProps) {\n    if (nextProps.dataSource !== this.props.dataSource) {\n      this.setState({\n        isLoading: false,\n        dataSource: this.state.dataSource.cloneWithRows(nextProps.dataSource),\n      })\n    }\n  }\n\n  onEndReached = () => {\n    if (this.state.isLoading || !this.props.hasMore) {\n      return\n    }\n    if (this.props.hasMore) {\n      this.setState({ isLoading: true })\n      this.props.queryMoreList()\n    }\n  }\n\n  renderFooter = () => {\n    const { isLoading } = this.state\n    const { hasMore, hasMoreMsg } = this.props\n    if (!hasMoreMsg!.length) {\n      return <></>\n    }\n    const message = hasMore ? '· 上拉加载更多 ·' : `· ${hasMoreMsg} ·`\n    return (\n      <Flex className={styles.loading_box} justify=\"center\">\n        {isLoading ? (\n          <Flex align=\"center\" justify=\"center\">\n            <Icon className={styles.icon} type={require('svg/spinner.svg')} />正在加载中...\n          </Flex>\n        ) : (\n          message\n        )}\n      </Flex>\n    )\n  }\n\n  render() {\n    const { Header, Row, className, pageSize } = this.props\n    const { dataSource } = this.state\n\n    return (\n      <ListView\n        dataSource={dataSource}\n        renderHeader={Header}\n        renderFooter={this.renderFooter}\n        renderRow={Row}\n        className={className}\n        initialListSize={pageSize}\n        pageSize={pageSize}\n        useBodyScroll={true}\n        onEndReached={this.onEndReached}\n        onEndReachedThreshold={100}\n      />\n    )\n  }\n}\n\nexport default MyListView\n"]},"metadata":{},"sourceType":"module"}