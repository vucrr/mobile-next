{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nexport function takePhoto() {\n  return new _Promise(function (resolve, reject) {\n    AlipayJSBridge.call('chooseImage', {\n      count: 1,\n      // 如果只需要拍照，可以只传['camera', 'album']\n      sourceType: ['camera']\n    }, function (result) {\n      if (result.success) {\n        var apFilePath = result.apFilePathsV2 || result.apFilePaths || [];\n\n        if (typeof apFilePath === 'string') {\n          try {\n            apFilePath = JSON.parse(apFilePath);\n          } catch (e) {\n            console.log('获取apFilePath出错');\n          }\n        }\n\n        if (!apFilePath.length || !/^https?:/.test(apFilePath[0])) {\n          console.log('无apFilePath');\n        }\n\n        var image = new Image();\n        image.crossOrigin = 'anonymous';\n\n        image.onload = function () {\n          var canvas = document.createElement('CANVAS');\n          var context = canvas.getContext('2d');\n          canvas.height = image.height;\n          canvas.width = image.width;\n          context.drawImage(image, 0, 0);\n\n          try {\n            resolve(canvas.toDataURL('image/jpeg'));\n          } catch (e) {\n            alert('canvas 生成错误');\n          }\n        };\n\n        image.src = apFilePath[0];\n      } else {\n        reject('error');\n      }\n    });\n  });\n}\nexport function getCurrentLocation() {\n  return new _Promise(function (resolve) {\n    AlipayJSBridge.call('getCurrentLocation', {\n      bizType: 'didi'\n    }, function (result) {\n      if (result.error) {\n        resolve(false);\n      }\n\n      resolve(result);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/viser/mobile-next/src/utils/alipayJSBridge.ts"],"names":["takePhoto","resolve","reject","AlipayJSBridge","call","count","sourceType","result","success","apFilePath","apFilePathsV2","apFilePaths","JSON","parse","e","console","log","length","test","image","Image","crossOrigin","onload","canvas","document","createElement","context","getContext","height","width","drawImage","toDataURL","alert","src","getCurrentLocation","bizType","error"],"mappings":";AAAA,OAAO,SAASA,SAAT,GAAsC;AAC3C,SAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,IAAAA,cAAc,CAACC,IAAf,CACE,aADF,EAEE;AACEC,MAAAA,KAAK,EAAE,CADT;AAEE;AACAC,MAAAA,UAAU,EAAE,CAAC,QAAD;AAHd,KAFF,EAOE,UAACC,MAAD,EAAiB;AACf,UAAIA,MAAM,CAACC,OAAX,EAAoB;AAClB,YAAIC,UAAU,GAAGF,MAAM,CAACG,aAAP,IAAwBH,MAAM,CAACI,WAA/B,IAA8C,EAA/D;;AACA,YAAI,OAAOF,UAAP,KAAsB,QAA1B,EAAoC;AAClC,cAAI;AACFA,YAAAA,UAAU,GAAGG,IAAI,CAACC,KAAL,CAAWJ,UAAX,CAAb;AACD,WAFD,CAEE,OAAOK,CAAP,EAAU;AACVC,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF;;AAED,YAAI,CAACP,UAAU,CAACQ,MAAZ,IAAsB,CAAC,WAAWC,IAAX,CAAgBT,UAAU,CAAC,CAAD,CAA1B,CAA3B,EAA2D;AACzDM,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;;AACD,YAAMG,KAAK,GAAG,IAAIC,KAAJ,EAAd;AACAD,QAAAA,KAAK,CAACE,WAAN,GAAoB,WAApB;;AACAF,QAAAA,KAAK,CAACG,MAAN,GAAe,YAAM;AACnB,cAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,cAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB;AACAJ,UAAAA,MAAM,CAACK,MAAP,GAAgBT,KAAK,CAACS,MAAtB;AACAL,UAAAA,MAAM,CAACM,KAAP,GAAeV,KAAK,CAACU,KAArB;AACAH,UAAAA,OAAO,CAAEI,SAAT,CAAmBX,KAAnB,EAA0B,CAA1B,EAA6B,CAA7B;;AACA,cAAI;AACFlB,YAAAA,OAAO,CAACsB,MAAM,CAACQ,SAAP,CAAiB,YAAjB,CAAD,CAAP;AACD,WAFD,CAEE,OAAOjB,CAAP,EAAU;AACVkB,YAAAA,KAAK,CAAC,aAAD,CAAL;AACD;AACF,SAXD;;AAYAb,QAAAA,KAAK,CAACc,GAAN,GAAYxB,UAAU,CAAC,CAAD,CAAtB;AACD,OA5BD,MA4BO;AACLP,QAAAA,MAAM,CAAC,OAAD,CAAN;AACD;AACF,KAvCH;AAyCD,GA1CM,CAAP;AA2CD;AAED,OAAO,SAASgC,kBAAT,GAA0F;AAC/F,SAAO,aAAY,UAAAjC,OAAO,EAAI;AAC5BE,IAAAA,cAAc,CAACC,IAAf,CAAoB,oBAApB,EAA0C;AAAE+B,MAAAA,OAAO,EAAE;AAAX,KAA1C,EAA+D,UAAS5B,MAAT,EAAsB;AACnF,UAAIA,MAAM,CAAC6B,KAAX,EAAkB;AAChBnC,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AACDA,MAAAA,OAAO,CAACM,MAAD,CAAP;AACD,KALD;AAMD,GAPM,CAAP;AAQD","sourcesContent":["export function takePhoto(): Promise<string> {\n  return new Promise((resolve, reject) => {\n    AlipayJSBridge.call(\n      'chooseImage',\n      {\n        count: 1,\n        // 如果只需要拍照，可以只传['camera', 'album']\n        sourceType: ['camera'],\n      },\n      (result: any) => {\n        if (result.success) {\n          let apFilePath = result.apFilePathsV2 || result.apFilePaths || []\n          if (typeof apFilePath === 'string') {\n            try {\n              apFilePath = JSON.parse(apFilePath)\n            } catch (e) {\n              console.log('获取apFilePath出错')\n            }\n          }\n\n          if (!apFilePath.length || !/^https?:/.test(apFilePath[0])) {\n            console.log('无apFilePath')\n          }\n          const image = new Image()\n          image.crossOrigin = 'anonymous'\n          image.onload = () => {\n            const canvas = document.createElement('CANVAS') as HTMLCanvasElement\n            const context = canvas.getContext('2d')\n            canvas.height = image.height\n            canvas.width = image.width\n            context!.drawImage(image, 0, 0)\n            try {\n              resolve(canvas.toDataURL('image/jpeg'))\n            } catch (e) {\n              alert('canvas 生成错误')\n            }\n          }\n          image.src = apFilePath[0]\n        } else {\n          reject('error')\n        }\n      },\n    )\n  })\n}\n\nexport function getCurrentLocation(): Promise<boolean | { latitude: number; longitude: number }> {\n  return new Promise(resolve => {\n    AlipayJSBridge.call('getCurrentLocation', { bizType: 'didi' }, function(result: any) {\n      if (result.error) {\n        resolve(false)\n      }\n      resolve(result)\n    })\n  })\n}\n"]},"metadata":{},"sourceType":"module"}