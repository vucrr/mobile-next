{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nimport { LOAD_REPAIR_STANDBY_RECORD_LIST, REPAIR_STANDBY_DETAIL, REPAIR_STANDBY_RECORD_LIST } from 'constant/index';\nimport { fromJS } from 'immutable';\nimport { handleActions } from 'redux-actions';\nvar initialReturn = {\n  data: [],\n  page: 1,\n  page_size: 5,\n  record: {}\n};\nvar orderDetailReturn = handleActions((_handleActions = {}, _defineProperty(_handleActions, REPAIR_STANDBY_DETAIL, function (state, _ref) {\n  var payload = _ref.payload;\n  var res = payload;\n  return state.set('detail', fromJS(res));\n}), _defineProperty(_handleActions, REPAIR_STANDBY_RECORD_LIST, function (state, _ref2) {\n  var payload = _ref2.payload;\n  var data = payload.data,\n      count = payload.count,\n      errorMsg = payload.errorMsg;\n\n  if (errorMsg) {\n    return state.set('data', fromJS(payload));\n  }\n\n  return state.set('data', fromJS(data)).set('count', fromJS(count)).set('page', fromJS(1));\n}), _defineProperty(_handleActions, LOAD_REPAIR_STANDBY_RECORD_LIST, function (state, _ref3) {\n  var payload = _ref3.payload;\n  var data = payload.data,\n      count = payload.count,\n      page = payload.page;\n  var datas = state.get('data').concat(fromJS(data));\n  return state.set('data', datas).set('count', fromJS(count)).set('page', fromJS(page));\n}), _handleActions), fromJS(initialReturn));\nexport default orderDetailReturn;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/reducers/myAccount/repair/standby.ts"],"names":["LOAD_REPAIR_STANDBY_RECORD_LIST","REPAIR_STANDBY_DETAIL","REPAIR_STANDBY_RECORD_LIST","fromJS","handleActions","initialReturn","data","page","page_size","record","orderDetailReturn","state","payload","res","set","count","errorMsg","datas","get","concat"],"mappings":";;;;AAAA,SAASA,+BAAT,EAA0CC,qBAA1C,EAAiEC,0BAAjE,QAAmG,gBAAnG;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,SAASC,aAAT,QAA8B,eAA9B;AAEA,IAAMC,aAAkB,GAAG;AACzBC,EAAAA,IAAI,EAAE,EADmB;AAEzBC,EAAAA,IAAI,EAAE,CAFmB;AAGzBC,EAAAA,SAAS,EAAE,CAHc;AAIzBC,EAAAA,MAAM,EAAE;AAJiB,CAA3B;AAOA,IAAMC,iBAAiB,GAAGN,aAAa,uDAElCH,qBAFkC,YAEXU,KAFW,QAES;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC1C,MAAMC,GAAkB,GAAGD,OAA3B;AACA,SAAOD,KAAK,CAACG,GAAN,CAAU,QAAV,EAAoBX,MAAM,CAACU,GAAD,CAA1B,CAAP;AACD,CALkC,mCAMlCX,0BANkC,YAMNS,KANM,SAMc;AAAA,MAAXC,OAAW,SAAXA,OAAW;AAAA,MACvCN,IADuC,GACRM,OADQ,CACvCN,IADuC;AAAA,MACjCS,KADiC,GACRH,OADQ,CACjCG,KADiC;AAAA,MAC1BC,QAD0B,GACRJ,OADQ,CAC1BI,QAD0B;;AAE/C,MAAIA,QAAJ,EAAc;AACZ,WAAOL,KAAK,CAACG,GAAN,CAAU,MAAV,EAAkBX,MAAM,CAACS,OAAD,CAAxB,CAAP;AACD;;AACD,SAAOD,KAAK,CACTG,GADI,CACA,MADA,EACQX,MAAM,CAACG,IAAD,CADd,EAEJQ,GAFI,CAEA,OAFA,EAESX,MAAM,CAACY,KAAD,CAFf,EAGJD,GAHI,CAGA,MAHA,EAGQX,MAAM,CAAC,CAAD,CAHd,CAAP;AAID,CAfkC,mCAgBlCH,+BAhBkC,YAgBDW,KAhBC,SAgBmB;AAAA,MAAXC,OAAW,SAAXA,OAAW;AAAA,MAC5CN,IAD4C,GACNM,OADM,CAC5CN,IAD4C;AAAA,MACtCS,KADsC,GACNH,OADM,CACtCG,KADsC;AAAA,MAC/BR,IAD+B,GACNK,OADM,CAC/BL,IAD+B;AAEpD,MAAMU,KAAK,GAAGN,KAAK,CAACO,GAAN,CAAU,MAAV,EAAkBC,MAAlB,CAAyBhB,MAAM,CAACG,IAAD,CAA/B,CAAd;AACA,SAAOK,KAAK,CACTG,GADI,CACA,MADA,EACQG,KADR,EAEJH,GAFI,CAEA,OAFA,EAESX,MAAM,CAACY,KAAD,CAFf,EAGJD,GAHI,CAGA,MAHA,EAGQX,MAAM,CAACI,IAAD,CAHd,CAAP;AAID,CAvBkC,oBAyBrCJ,MAAM,CAACE,aAAD,CAzB+B,CAAvC;AA4BA,eAAeK,iBAAf","sourcesContent":["import { LOAD_REPAIR_STANDBY_RECORD_LIST, REPAIR_STANDBY_DETAIL, REPAIR_STANDBY_RECORD_LIST } from 'constant/index'\nimport { fromJS } from 'immutable'\nimport { Standby2Record, StandbyDetail } from 'interfaces/repair'\nimport { handleActions } from 'redux-actions'\n\nconst initialReturn: any = {\n  data: [],\n  page: 1,\n  page_size: 5,\n  record: {},\n}\n\nconst orderDetailReturn = handleActions(\n  {\n    [REPAIR_STANDBY_DETAIL](state, { payload }) {\n      const res: StandbyDetail = payload\n      return state.set('detail', fromJS(res))\n    },\n    [REPAIR_STANDBY_RECORD_LIST](state, { payload }) {\n      const { data, count, errorMsg }: any = payload\n      if (errorMsg) {\n        return state.set('data', fromJS(payload))\n      }\n      return state\n        .set('data', fromJS(data))\n        .set('count', fromJS(count))\n        .set('page', fromJS(1))\n    },\n    [LOAD_REPAIR_STANDBY_RECORD_LIST](state, { payload }) {\n      const { data, count, page }: Standby2Record = payload\n      const datas = state.get('data').concat(fromJS(data))\n      return state\n        .set('data', datas)\n        .set('count', fromJS(count))\n        .set('page', fromJS(page))\n    },\n  },\n  fromJS(initialReturn),\n)\n\nexport default orderDetailReturn\n"]},"metadata":{},"sourceType":"module"}