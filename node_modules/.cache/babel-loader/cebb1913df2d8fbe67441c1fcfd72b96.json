{"ast":null,"code":"import _Toast from \"antd-mobile/lib/toast\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { getHeaders2 } from 'actions/actionHelper';\nimport { FETCH_TRADE_ASSESS_LIST_INFO } from 'constant/index';\nimport { createAction } from 'redux-actions';\nimport { isIOS } from 'utils/app';\nimport { axios, tools } from 'utils/index';\nimport { createStrategyPay } from \"../order/pay\";\nvar receiveInfo = createAction(FETCH_TRADE_ASSESS_LIST_INFO);\nexport var getCreditEntrydata = function getCreditEntrydata(_ref) {\n  var query = _ref.query,\n      req = _ref.req;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var url, headers, _ref3, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = 'node-api/trade/creditevaluation'; // const url = 'mock/mytrade/assess/list'\n\n                headers = getHeaders2(req);\n                _context.prev = 2;\n                _context.next = 5;\n                return axios.get(url, {\n                  params: query,\n                  headers: headers\n                });\n\n              case 5:\n                _ref3 = _context.sent;\n                data = _ref3.data;\n                data && dispatch(receiveInfo(data));\n                return _context.abrupt(\"return\", data);\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                tools.ErrorLog(_context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var sendGPSFlow = function sendGPSFlow(params) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(_) {\n        var url, headers, _ref5, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                url = 'node-api/trade/assess/gpsFlow';\n                headers = getHeaders2();\n                _context2.prev = 2;\n                _context2.next = 5;\n                return axios.post(url, {\n                  longitude: params.longitude,\n                  latitude: params.latitude,\n                  is_agree: 1,\n                  os: isIOS() ? 'ios' : 'android'\n                }, {\n                  headers: headers\n                });\n\n              case 5:\n                _ref5 = _context2.sent;\n                data = _ref5.data;\n\n                if (data.errorMsg) {\n                  _Toast.info(data.errorMsg);\n                } else {\n                  window.location.reload();\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](2);\n                tools.ErrorLog(_context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 10]]);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var sendTongDun = function sendTongDun(params) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(_) {\n        var url, headers, _ref7, data;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                url = 'node-api/trade/assess/tongDunData';\n                headers = getHeaders2();\n                _context3.prev = 2;\n                _context3.next = 5;\n                return axios.post(url, params, {\n                  headers: headers\n                });\n\n              case 5:\n                _ref7 = _context3.sent;\n                data = _ref7.data;\n\n                if (data.errorMsg) {\n                  _Toast.info(data.errorMsg);\n                }\n\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](2);\n                tools.ErrorLog(_context3.t0);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[2, 10]]);\n      }));\n\n      return function (_x3) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var SendEmergencyContact = function SendEmergencyContact(params) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref8 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(_) {\n        var url, headers, _ref9, data;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                url = 'node-api/trade/assess/emergencyContact';\n                headers = getHeaders2();\n                _context4.prev = 2;\n                _context4.next = 5;\n                return axios.post(url, {\n                  address: params.address\n                }, {\n                  headers: headers\n                });\n\n              case 5:\n                _ref9 = _context4.sent;\n                data = _ref9.data;\n\n                if (data.errorMsg) {\n                  _Toast.info(data.errorMsg);\n                }\n\n                _context4.next = 13;\n                break;\n\n              case 10:\n                _context4.prev = 10;\n                _context4.t0 = _context4[\"catch\"](2);\n                tools.ErrorLog(_context4.t0);\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[2, 10]]);\n      }));\n\n      return function (_x4) {\n        return _ref8.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var finishSupplementStep = function finishSupplementStep(params) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref10 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var url, headers, _ref11, data;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                url = 'node-api/trade/assess/finishSupplementStep';\n                headers = getHeaders2();\n                _context5.prev = 2;\n                _context5.next = 5;\n                return axios.post(url, params, {\n                  headers: headers\n                });\n\n              case 5:\n                _ref11 = _context5.sent;\n                data = _ref11.data;\n\n                if (data.errorMsg) {\n                  _Toast.info(data.errorMsg);\n                } else if (data.is_finish) {\n                  dispatch(createStrategyPay(params));\n                }\n\n                _context5.next = 13;\n                break;\n\n              case 10:\n                _context5.prev = 10;\n                _context5.t0 = _context5[\"catch\"](2);\n                tools.ErrorLog(_context5.t0);\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[2, 10]]);\n      }));\n\n      return function (_x5) {\n        return _ref10.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/viser/mobile-next/src/actions/myTrade/assess/list.ts"],"names":["getHeaders2","FETCH_TRADE_ASSESS_LIST_INFO","createAction","isIOS","axios","tools","createStrategyPay","receiveInfo","getCreditEntrydata","query","req","dispatch","url","headers","get","params","data","ErrorLog","sendGPSFlow","_","post","longitude","latitude","is_agree","os","errorMsg","info","window","location","reload","sendTongDun","SendEmergencyContact","address","finishSupplementStep","is_finish"],"mappings":"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","sourcesContent":["import { getHeaders2 } from 'actions/actionHelper'\nimport { Toast } from 'antd-mobile'\nimport { FETCH_TRADE_ASSESS_LIST_INFO } from 'constant/index'\nimport { Query } from 'containers/MyTrade/Assess/List'\nimport { ErrorReturn } from 'interfaces/error'\nimport { FinishCreditEntryReturns, GetCreditEntrydata } from 'interfaces/mytrade/assess/list'\nimport { ClientRequest } from 'interfaces/router'\nimport { Action, Dispatch } from 'redux'\nimport { createAction } from 'redux-actions'\nimport { isIOS } from 'utils/app'\nimport { axios, tools } from 'utils/index'\nimport { createStrategyPay } from '../order/pay'\n\nconst receiveInfo = createAction<GetCreditEntrydata>(FETCH_TRADE_ASSESS_LIST_INFO)\n\nexport const getCreditEntrydata = ({ query, req }: ClientRequest) => async (dispatch: Dispatch<Action>) => {\n  const url = 'node-api/trade/creditevaluation'\n  // const url = 'mock/mytrade/assess/list'\n  const headers = getHeaders2(req)\n  try {\n    const { data } = await axios.get<GetCreditEntrydata>(url, { params: query, headers })\n    data && dispatch(receiveInfo(data))\n    return data\n  } catch (err) {\n    tools.ErrorLog(err)\n  }\n}\n\nexport interface SendGPSFlowParams {\n  longitude: number\n  latitude: number\n}\n\nexport const sendGPSFlow = (params: SendGPSFlowParams) => async (_: Dispatch<Action>) => {\n  const url = 'node-api/trade/assess/gpsFlow'\n  const headers = getHeaders2()\n  try {\n    const { data } = await axios.post<any>(\n      url,\n      {\n        longitude: params.longitude,\n        latitude: params.latitude,\n        is_agree: 1,\n        os: isIOS() ? 'ios' : 'android',\n      },\n      { headers },\n    )\n    if (data.errorMsg) {\n      Toast.info(data.errorMsg)\n    } else {\n      window.location.reload()\n    }\n  } catch (err) {\n    tools.ErrorLog(err)\n  }\n}\n\nexport interface SendtongdunParam {\n  blackBox: string\n  platform: number\n}\n\nexport const sendTongDun = (params: SendtongdunParam) => async (_: Dispatch<Action>) => {\n  const url = 'node-api/trade/assess/tongDunData'\n  const headers = getHeaders2()\n  try {\n    const { data } = await axios.post<any>(url, params, { headers })\n    if (data.errorMsg) {\n      Toast.info(data.errorMsg)\n    }\n  } catch (err) {\n    tools.ErrorLog(err)\n  }\n}\n\nexport const SendEmergencyContact = (params: any) => async (_: Dispatch<Action>) => {\n  const url = 'node-api/trade/assess/emergencyContact'\n  const headers = getHeaders2()\n  try {\n    const { data } = await axios.post<any>(\n      url,\n      {\n        address: params.address,\n      },\n      { headers },\n    )\n    if (data.errorMsg) {\n      Toast.info(data.errorMsg)\n    }\n  } catch (err) {\n    tools.ErrorLog(err)\n  }\n}\n\nexport const finishSupplementStep = (params: Query) => async (dispatch: any) => {\n  const url = 'node-api/trade/assess/finishSupplementStep'\n  const headers = getHeaders2()\n  try {\n    const { data } = await axios.post<FinishCreditEntryReturns & ErrorReturn>(url, params, { headers })\n    if (data.errorMsg) {\n      Toast.info(data.errorMsg)\n    } else if (data.is_finish) {\n      dispatch(createStrategyPay(params))\n    }\n  } catch (err) {\n    tools.ErrorLog(err)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}