{"ast":null,"code":"import Link from 'next/link';\nimport { stringify } from 'qs';\nimport React from 'react';\nimport { trackClickEvent } from 'utils/piwik';\n\nvar AppLink = function AppLink(_ref) {\n  var className = _ref.className,\n      _ref$to = _ref.to,\n      to = _ref$to === void 0 ? '' : _ref$to,\n      children = _ref.children,\n      trackEvent = _ref.trackEvent,\n      native = _ref.native,\n      target = _ref.target,\n      _ref$replace = _ref.replace,\n      replace = _ref$replace === void 0 ? false : _ref$replace;\n  var nativeTo = to && to.pathname ? \"\".concat(to.pathname).concat(stringify(to.query, {\n    addQueryPrefix: true\n  })) : to;\n\n  if (trackEvent) {\n    var handleTrackEvent = function handleTrackEvent() {\n      return trackClickEvent(trackEvent);\n    };\n\n    if (native) {\n      return React.createElement(\"a\", {\n        href: nativeTo,\n        className: className,\n        onClick: handleTrackEvent\n      }, children);\n    }\n\n    return React.createElement(Link, {\n      href: to,\n      replace: replace\n    }, React.createElement(\"a\", {\n      className: className,\n      onClick: handleTrackEvent\n    }, children));\n  }\n\n  if (native) {\n    return React.createElement(\"a\", {\n      href: nativeTo,\n      className: className,\n      target: target\n    }, children);\n  }\n\n  return React.createElement(Link, {\n    href: to,\n    replace: replace\n  }, React.createElement(\"a\", {\n    className: className\n  }, children));\n};\n\nexport default AppLink;","map":{"version":3,"sources":["/Users/viser/mobile-next/src/components/Link/Link.tsx"],"names":["Link","stringify","React","trackClickEvent","AppLink","className","to","children","trackEvent","native","target","replace","nativeTo","pathname","query","addQueryPrefix","handleTrackEvent"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,IAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAoCC,eAApC,QAA2D,aAA3D;;AAYA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA8F;AAAA,MAA3FC,SAA2F,QAA3FA,SAA2F;AAAA,qBAAhFC,EAAgF;AAAA,MAAhFA,EAAgF,wBAA3E,EAA2E;AAAA,MAAvEC,QAAuE,QAAvEA,QAAuE;AAAA,MAA7DC,UAA6D,QAA7DA,UAA6D;AAAA,MAAjDC,MAAiD,QAAjDA,MAAiD;AAAA,MAAzCC,MAAyC,QAAzCA,MAAyC;AAAA,0BAAjCC,OAAiC;AAAA,MAAjCA,OAAiC,6BAAvB,KAAuB;AAC5G,MAAMC,QAAQ,GAAGN,EAAE,IAAIA,EAAE,CAACO,QAAT,aAAuBP,EAAE,CAACO,QAA1B,SAAqCZ,SAAS,CAACK,EAAE,CAACQ,KAAJ,EAAW;AAAEC,IAAAA,cAAc,EAAE;AAAlB,GAAX,CAA9C,IAAuFT,EAAxG;;AACA,MAAIE,UAAJ,EAAgB;AACd,QAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,aAAMb,eAAe,CAACK,UAAD,CAArB;AAAA,KAAzB;;AACA,QAAIC,MAAJ,EAAY;AACV,aACE;AAAG,QAAA,IAAI,EAAEG,QAAT;AAAmB,QAAA,SAAS,EAAEP,SAA9B;AAAyC,QAAA,OAAO,EAAEW;AAAlD,SACGT,QADH,CADF;AAKD;;AACD,WACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAED,EAAZ;AAAgB,MAAA,OAAO,EAAEK;AAAzB,OACE;AAAG,MAAA,SAAS,EAAEN,SAAd;AAAyB,MAAA,OAAO,EAAEW;AAAlC,OACGT,QADH,CADF,CADF;AAOD;;AAED,MAAIE,MAAJ,EAAY;AACV,WACE;AAAG,MAAA,IAAI,EAAEG,QAAT;AAAmB,MAAA,SAAS,EAAEP,SAA9B;AAAyC,MAAA,MAAM,EAAEK;AAAjD,OACGH,QADH,CADF;AAKD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAED,EAAZ;AAAgB,IAAA,OAAO,EAAEK;AAAzB,KACE;AAAG,IAAA,SAAS,EAAEN;AAAd,KAA0BE,QAA1B,CADF,CADF;AAKD,CAjCD;;AAmCA,eAAeH,OAAf","sourcesContent":["import Link from 'next/link'\nimport { stringify } from 'qs'\nimport React from 'react'\nimport { TrackClickEventProperties, trackClickEvent } from 'utils/piwik'\n\ninterface LinkProps {\n  to: string | any\n  children: any\n  trackEvent?: TrackClickEventProperties\n  className?: string\n  native?: boolean\n  target?: string\n  replace?: boolean\n}\n\nconst AppLink = ({ className, to = '', children, trackEvent, native, target, replace = false }: LinkProps) => {\n  const nativeTo = to && to.pathname ? `${to.pathname}${stringify(to.query, { addQueryPrefix: true })}` : to\n  if (trackEvent) {\n    const handleTrackEvent = () => trackClickEvent(trackEvent)\n    if (native) {\n      return (\n        <a href={nativeTo} className={className} onClick={handleTrackEvent}>\n          {children}\n        </a>\n      )\n    }\n    return (\n      <Link href={to} replace={replace}>\n        <a className={className} onClick={handleTrackEvent}>\n          {children}\n        </a>\n      </Link>\n    )\n  }\n\n  if (native) {\n    return (\n      <a href={nativeTo} className={className} target={target}>\n        {children}\n      </a>\n    )\n  }\n\n  return (\n    <Link href={to} replace={replace}>\n      <a className={className}>{children}</a>\n    </Link>\n  )\n}\n\nexport default AppLink\n"]},"metadata":{},"sourceType":"module"}