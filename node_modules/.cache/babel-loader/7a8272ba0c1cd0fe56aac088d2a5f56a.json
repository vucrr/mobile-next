{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { getHeaders2 } from 'actions/actionHelper';\nimport { FETCH_TRADE_ASSESS_LIST_INFO } from 'constant/index';\nimport { createAction } from 'redux-actions';\nimport { axios, tools } from 'utils/index';\nvar receiveInfo = createAction(FETCH_TRADE_ASSESS_LIST_INFO);\nexport var getCreditEntrydata = function getCreditEntrydata(_ref) {\n  var query = _ref.query,\n      req = _ref.req;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var url, headers, _ref3, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = 'node-api/mytrade/assess/list';\n                headers = getHeaders2(req);\n                _context.prev = 2;\n                _context.next = 5;\n                return axios.get(url, {\n                  params: query,\n                  headers: headers\n                });\n\n              case 5:\n                _ref3 = _context.sent;\n                data = _ref3.data;\n                data && dispatch(receiveInfo(data));\n                return _context.abrupt(\"return\", data);\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                tools.ErrorLog(_context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/viser/mobile-next/src/actions/myTrade/assess/list.ts"],"names":["getHeaders2","FETCH_TRADE_ASSESS_LIST_INFO","createAction","axios","tools","receiveInfo","getCreditEntrydata","query","req","dispatch","url","headers","get","params","data","ErrorLog"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,SAASC,4BAAT,QAA6C,gBAA7C;AAIA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,aAA7B;AAEA,IAAMC,WAAW,GAAGH,YAAY,CAAqBD,4BAArB,CAAhC;AAEA,OAAO,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,GAAV,QAAUA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAmC,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC7DC,gBAAAA,GAD6D,GACvD,8BADuD;AAE7DC,gBAAAA,OAF6D,GAEnDX,WAAW,CAACQ,GAAD,CAFwC;AAAA;AAAA;AAAA,uBAI1CL,KAAK,CAACS,GAAN,CAA8BF,GAA9B,EAAmC;AAAEG,kBAAAA,MAAM,EAAEN,KAAV;AAAiBI,kBAAAA,OAAO,EAAPA;AAAjB,iBAAnC,CAJ0C;;AAAA;AAAA;AAIzDG,gBAAAA,IAJyD,SAIzDA,IAJyD;AAKjEA,gBAAAA,IAAI,IAAIL,QAAQ,CAACJ,WAAW,CAACS,IAAD,CAAZ,CAAhB;AALiE,iDAM1DA,IAN0D;;AAAA;AAAA;AAAA;AAQjEV,gBAAAA,KAAK,CAACW,QAAN;;AARiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAnC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B","sourcesContent":["import { getHeaders2 } from 'actions/actionHelper'\nimport { FETCH_TRADE_ASSESS_LIST_INFO } from 'constant/index'\nimport { GetCreditEntrydata } from 'interfaces/mytrade/assess/list'\nimport { ClientRequest } from 'interfaces/router'\nimport { Action, Dispatch } from 'redux'\nimport { createAction } from 'redux-actions'\nimport { axios, tools } from 'utils/index'\n\nconst receiveInfo = createAction<GetCreditEntrydata>(FETCH_TRADE_ASSESS_LIST_INFO)\n\nexport const getCreditEntrydata = ({ query, req }: ClientRequest) => async (dispatch: Dispatch<Action>) => {\n  const url = 'node-api/mytrade/assess/list'\n  const headers = getHeaders2(req)\n  try {\n    const { data } = await axios.get<GetCreditEntrydata>(url, { params: query, headers })\n    data && dispatch(receiveInfo(data))\n    return data\n  } catch (err) {\n    tools.ErrorLog(err)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}