{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { getHeaders2 } from 'actions/actionHelper';\nimport { axios, tools } from 'utils/index';\nexport var uploadBase64 = function uploadBase64(file) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_) {\n        var headers, url, _ref2, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                headers = getHeaders2();\n                url = 'node-api/common/upload';\n                _context.prev = 2;\n                _context.next = 5;\n                return axios.post(url, {\n                  file: file\n                }, {\n                  headers: headers\n                });\n\n              case 5:\n                _ref2 = _context.sent;\n                data = _ref2.data;\n                return _context.abrupt(\"return\", data);\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n                tools.ErrorLog(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/viser/mobile-next/src/actions/upload.ts"],"names":["getHeaders2","axios","tools","uploadBase64","file","_","headers","url","post","data","ErrorLog"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,sBAA5B;AAEA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,aAA7B;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAkB,iBAAOC,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACtCC,gBAAAA,OADsC,GAC5BN,WAAW,EADiB;AAEtCO,gBAAAA,GAFsC,GAEhC,wBAFgC;AAAA;AAAA;AAAA,uBAInBN,KAAK,CAACO,IAAN,CAAWD,GAAX,EAAgB;AAAEH,kBAAAA,IAAI,EAAJA;AAAF,iBAAhB,EAA0B;AAAEE,kBAAAA,OAAO,EAAPA;AAAF,iBAA1B,CAJmB;;AAAA;AAAA;AAIlCG,gBAAAA,IAJkC,SAIlCA,IAJkC;AAAA,iDAKnCA,IALmC;;AAAA;AAAA;AAAA;AAO1CP,gBAAAA,KAAK,CAACQ,QAAN;;AAP0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import { getHeaders2 } from 'actions/actionHelper'\nimport { Dispatch } from 'redux'\nimport { axios, tools } from 'utils/index'\n\nexport const uploadBase64 = (file: string) => async (_: Dispatch) => {\n  const headers = getHeaders2()\n  const url = 'node-api/common/upload'\n  try {\n    const { data } = await axios.post(url, { file }, { headers })\n    return data\n  } catch (e) {\n    tools.ErrorLog(e)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}